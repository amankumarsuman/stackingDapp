{
  "contractName": "myStackingDappOld",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewards",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "stakingToken",
          "type": "address"
        }
      ],
      "name": "Rewarding",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountToStake",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "stakingToken",
          "type": "address"
        }
      ],
      "name": "Staking",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountToUnstake",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "stakingToken",
          "type": "address"
        }
      ],
      "name": "Unstaking",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DAILY_REWARD_RATE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listOfStaker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listOfToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceConsumer",
      "outputs": [
        {
          "internalType": "contract PriceConsumer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsToken",
      "outputs": [
        {
          "internalType": "contract AALToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stackingToken",
      "outputs": [
        {
          "internalType": "contract TokenBidon",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startStakingTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updateTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewards",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "staked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalTokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wf",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountToStake",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        }
      ],
      "name": "getReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceOfAllSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPriceOfToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"name\":\"Rewarding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToStake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"name\":\"Staking\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToUnstake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"name\":\"Unstaking\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAILY_REWARD_RATE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOfAllSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPriceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listOfStaker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listOfToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceConsumer\",\"outputs\":[{\"internalType\":\"contract PriceConsumer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract AALToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stackingToken\",\"outputs\":[{\"internalType\":\"contract TokenBidon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountToStake\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startStakingTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wf\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getReward(address)\":{\"notice\":\"Computes rewards and transfers them msg.sender _token : staked token require max every 30 sec can be called\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MyStackingDappOld.sol\":\"myStackingDappOld\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/Denominations.sol\":{\"keccak256\":\"0xee406990d671c95993762c3ee15c77987ee35c3682357c419ff73747a728fc4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cacf9bf3ceca86053bfb23b12c42bfa7a3e28f2e7c548388cb6ceb372357bdc2\",\"dweb:/ipfs/QmcgE9akf5P6vjUpe9Kz3zANFSpbQsm9HM8RyXv1TLsRSP\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol\":{\"keccak256\":\"0xa783cf3434bd5b5153fe876c37d5d5cb78d4e198f01f184b60ed3392401ddc0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da43a873796a596da88cc1fbe684de3551ac99d4647e609b350cba5dc3258162\",\"dweb:/ipfs/QmVLiPnirG8rpVdxcMkoFZSrFoqTcye6Z9C6RjzcBUKzBu\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/AALToken.sol\":{\"keccak256\":\"0xf423189b7d2276da72f8d3bf0de4903d17c7031f57d8c1e0479aed22bce49743\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://115498f3f05a46619f094835cf74d41bdfe6d1c5da6aa07ecb7181296a0acb42\",\"dweb:/ipfs/QmX55p7sEEeWk8YKoPhoV4zGC5KQyyq3k4CAJgTPVPDTm9\"]},\"project:/contracts/MyStackingDappOld.sol\":{\"keccak256\":\"0x36742acbe20d9d7e7529b8497cc73a63a670476969b7b9bab2815bfd22bfcff3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8751061858723e88c9bd5fc1291771b7ca02422db3ca8f078beec662600ccd16\",\"dweb:/ipfs/Qmd2DFWV89EXHdaJk9jFwGZLFEFcRM9LoSz5PP8fUPLyEG\"]},\"project:/contracts/PriceConsumer.sol\":{\"keccak256\":\"0x3e35ccd674eb92cd4f39e190068736e0a4bb1125c90ecfd9f7065fc964f49d37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff95b96cfc45c014f41083f647e407cddac2edda4f9593f15c86bd61a48904af\",\"dweb:/ipfs/Qmdpvagw3zT1Gfauz19TchPgKXChoqLSCS8Bve7XRaTRcb\"]},\"project:/contracts/TokenBidon.sol\":{\"keccak256\":\"0x5ee7452de1736b35e1652218890cca533a65eb33cfbd3ee57a070dc716600d8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184e2e8279189ccab615c04f8e37c9a875427b60b40e8c9e20a086678131bb6f\",\"dweb:/ipfs/QmbMPUfvYYfEingRh1HnsKL3iK8QiyBsgjRM1HL2Yt7a6f\"]}},\"version\":1}",
  "bytecode": "0x60a0604052600260ff1660809060ff168152506012600660006101000a81548160ff021916908360ff1602179055503480156200003b57600080fd5b506040516200004a90620001b6565b604051809103906000f08015801562000067573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073aa7f6f7f507457a1ee157fe97f6c7db2beec5cd0604051620000ca90620001c4565b620000d6919062000225565b604051809103906000f080158015620000f3573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620186a06040516200014690620001d2565b62000152919062000299565b604051809103906000f0801580156200016f573d6000803e3d6000fd5b50600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620002b6565b611d2080620025d683390190565b61057580620042f683390190565b611e0e806200486b83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020d82620001e0565b9050919050565b6200021f8162000200565b82525050565b60006020820190506200023c600083018462000214565b92915050565b6000819050919050565b6000819050919050565b6000819050919050565b6000620002816200027b620002758462000242565b62000256565b6200024c565b9050919050565b620002938162000260565b82525050565b6000602082019050620002b0600083018462000288565b92915050565b6080516122fd620002d9600039600081816116ad01526117fc01526122fd6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a4e47b6611610097578063d1f8680611610066578063d1f868061461029e578063eaaa65ed146102bc578063f2888dbb146102da578063f9a88fc4146102f6576100f5565b8063a4e47b6614610214578063adc9772e14610248578063c00007b014610264578063d1af0c7d14610280576100f5565b8063461a758c116100d3578063461a758c146101785780636a36c343146101965780638a98e629146101c65780638da84478146101e4576100f5565b8063273cbaa0146100fa5780632c2332fe14610118578063369ba1ac14610148575b600080fd5b610102610314565b60405161010f91906119c6565b60405180910390f35b610132600480360381019061012d9190611a19565b6103a2565b60405161013f9190611a5f565b60405180910390f35b610162600480360381019061015d9190611aa6565b6103ba565b60405161016f9190611ae2565b60405180910390f35b6101806103f9565b60405161018d9190611b5c565b60405180910390f35b6101b060048036038101906101ab9190611aa6565b61041f565b6040516101bd9190611ae2565b60405180910390f35b6101ce61045e565b6040516101db9190611b98565b60405180910390f35b6101fe60048036038101906101f99190611a19565b610484565b60405161020b9190611a5f565b60405180910390f35b61022e60048036038101906102299190611bb3565b61054a565b60405161023f959493929190611c0e565b60405180910390f35b610262600480360381019061025d9190611c61565b61059a565b005b61027e60048036038101906102799190611a19565b610c08565b005b6102886110c4565b6040516102959190611cc2565b60405180910390f35b6102a66110e8565b6040516102b39190611a5f565b60405180910390f35b6102c46111f2565b6040516102d19190611cf9565b60405180910390f35b6102f460048036038101906102ef9190611a19565b611205565b005b6102fe6116ab565b60405161030b9190611cf9565b60405180910390f35b6060600580548060200260200160405190810160405280929190818152602001828054801561039857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161034e575b5050505050905090565b60036020528060005260406000206000915090505481565b600481815481106103ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005818154811061042f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac41865a846103486040518363ffffffff1660e01b81526004016104e6929190611d14565b602060405180830381865afa158015610503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105279190611d73565b9050600081126105375780610542565b8061054190611dcf565b5b915050919050565b6002602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b80600081116105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611e75565b60405180910390fd5b818373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161061a929190611d14565b602060405180830381865afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b9190611eaa565b101561069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069390611f23565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1661088d5760004290506040518060a001604052808481526020018281526020018281526020016000815260200160011515815250600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610a47565b61089783336116cf565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546109259190611f43565b9250508190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109bb9190611f43565b9250508190555042600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a969190611f43565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610b47576005839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b8493929190611f99565b6020604051808303816000875af1158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc79190611ffc565b507f9b52f0c543858b9187b0b963bc5c12e3f5d09f9426891c3d8fe69aed57cfcfdf338385604051610bfb93929190612029565b60405180910390a1505050565b8033600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1680610d2157506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154115b610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d57906120ac565b60405180910390fd5b601e600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015442610ded91906120cc565b11610e2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e249061214c565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015490506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610f5157610f4384336116cf565b81610f4e9190611f43565b90505b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b815260040161103192919061216c565b600060405180830381600087803b15801561104b57600080fd5b505af115801561105f573d6000803e3d6000fd5b505050507f6e2e634c7351983b01159f0afca4d5c2d0bac5da2a3017a29d3faf7138c98a4d338260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516110b693929190612029565b60405180910390a150505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060005b6005805490508110156111ea57600360006005838154811061111357611112612195565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111c0600583815481106111905761118f612195565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610484565b6111ca91906121c4565b826111d59190611f43565b915080806111e29061221e565b9150506110ee565b508091505090565b600660009054906101000a900460ff1681565b8033600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff168061131e57506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154115b61135d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611354906120ac565b60405180910390fd5b600a600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546113ed9190611f43565b925050819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114c791906120cc565b925050819055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161162692919061216c565b6020604051808303816000875af1158015611645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116699190611ffc565b507f7b5ffc292164c35fc3df96417675489512b1cd7e4198684766b374531ab32c1d33828660405161169d93929190612029565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060646116dc6110e8565b6116e691906121c4565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461176f86610484565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426117fa91906120cc565b7f000000000000000000000000000000000000000000000000000000000000000060ff1661182891906121c4565b61183291906121c4565b61183c91906121c4565b6118469190612296565b905042600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061192d82611902565b9050919050565b61193d81611922565b82525050565b600061194f8383611934565b60208301905092915050565b6000602082019050919050565b6000611973826118d6565b61197d81856118e1565b9350611988836118f2565b8060005b838110156119b95781516119a08882611943565b97506119ab8361195b565b92505060018101905061198c565b5085935050505092915050565b600060208201905081810360008301526119e08184611968565b905092915050565b600080fd5b6119f681611922565b8114611a0157600080fd5b50565b600081359050611a13816119ed565b92915050565b600060208284031215611a2f57611a2e6119e8565b5b6000611a3d84828501611a04565b91505092915050565b6000819050919050565b611a5981611a46565b82525050565b6000602082019050611a746000830184611a50565b92915050565b611a8381611a46565b8114611a8e57600080fd5b50565b600081359050611aa081611a7a565b92915050565b600060208284031215611abc57611abb6119e8565b5b6000611aca84828501611a91565b91505092915050565b611adc81611922565b82525050565b6000602082019050611af76000830184611ad3565b92915050565b6000819050919050565b6000611b22611b1d611b1884611902565b611afd565b611902565b9050919050565b6000611b3482611b07565b9050919050565b6000611b4682611b29565b9050919050565b611b5681611b3b565b82525050565b6000602082019050611b716000830184611b4d565b92915050565b6000611b8282611b29565b9050919050565b611b9281611b77565b82525050565b6000602082019050611bad6000830184611b89565b92915050565b60008060408385031215611bca57611bc96119e8565b5b6000611bd885828601611a04565b9250506020611be985828601611a04565b9150509250929050565b60008115159050919050565b611c0881611bf3565b82525050565b600060a082019050611c236000830188611a50565b611c306020830187611a50565b611c3d6040830186611a50565b611c4a6060830185611a50565b611c576080830184611bff565b9695505050505050565b60008060408385031215611c7857611c776119e8565b5b6000611c8685828601611a04565b9250506020611c9785828601611a91565b9150509250929050565b6000611cac82611b29565b9050919050565b611cbc81611ca1565b82525050565b6000602082019050611cd76000830184611cb3565b92915050565b600060ff82169050919050565b611cf381611cdd565b82525050565b6000602082019050611d0e6000830184611cea565b92915050565b6000604082019050611d296000830185611ad3565b611d366020830184611ad3565b9392505050565b6000819050919050565b611d5081611d3d565b8114611d5b57600080fd5b50565b600081519050611d6d81611d47565b92915050565b600060208284031215611d8957611d886119e8565b5b6000611d9784828501611d5e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dda82611d3d565b91507f8000000000000000000000000000000000000000000000000000000000000000821415611e0d57611e0c611da0565b5b816000039050919050565b600082825260208201905092915050565b7f416d6f756e74203c3d2030000000000000000000000000000000000000000000600082015250565b6000611e5f600b83611e18565b9150611e6a82611e29565b602082019050919050565b60006020820190508181036000830152611e8e81611e52565b9050919050565b600081519050611ea481611a7a565b92915050565b600060208284031215611ec057611ebf6119e8565b5b6000611ece84828501611e95565b91505092915050565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b6000611f0d601983611e18565b9150611f1882611ed7565b602082019050919050565b60006020820190508181036000830152611f3c81611f00565b9050919050565b6000611f4e82611a46565b9150611f5983611a46565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f8e57611f8d611da0565b5b828201905092915050565b6000606082019050611fae6000830186611ad3565b611fbb6020830185611ad3565b611fc86040830184611a50565b949350505050565b611fd981611bf3565b8114611fe457600080fd5b50565b600081519050611ff681611fd0565b92915050565b600060208284031215612012576120116119e8565b5b600061202084828501611fe7565b91505092915050565b600060608201905061203e6000830186611ad3565b61204b6020830185611a50565b6120586040830184611ad3565b949350505050565b7f4e6f742061207374616b6572206f72206e6f2072657761726473000000000000600082015250565b6000612096601a83611e18565b91506120a182612060565b602082019050919050565b600060208201905081810360008301526120c581612089565b9050919050565b60006120d782611a46565b91506120e283611a46565b9250828210156120f5576120f4611da0565b5b828203905092915050565b7f73746f70207370616d0000000000000000000000000000000000000000000000600082015250565b6000612136600983611e18565b915061214182612100565b602082019050919050565b6000602082019050818103600083015261216581612129565b9050919050565b60006040820190506121816000830185611ad3565b61218e6020830184611a50565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006121cf82611a46565b91506121da83611a46565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561221357612212611da0565b5b828202905092915050565b600061222982611a46565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561225c5761225b611da0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006122a182611a46565b91506122ac83611a46565b9250826122bc576122bb612267565b5b82820490509291505056fea2646970667358221220133e918567185dec60ded12995dab1af21abd711e9343541bc1a44f23338055664736f6c634300080b003360806040523480156200001157600080fd5b506040518060400160405280600881526020017f41414c546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f41414c0000000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620001a6565b508060049080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b60208210811415620002b557620002b462000256565b5b50919050565b611a5580620002cb6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b806370a0823114610200578063715018a6146102305780638da5cb5b1461023a57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190611121565b60405180910390f35b610132600480360381019061012d91906111dc565b6103b4565b60405161013f9190611237565b60405180910390f35b6101506103d7565b60405161015d9190611261565b60405180910390f35b610180600480360381019061017b919061127c565b6103e1565b60405161018d9190611237565b60405180910390f35b61019e610410565b6040516101ab91906112eb565b60405180910390f35b6101ce60048036038101906101c991906111dc565b610419565b6040516101db9190611237565b60405180910390f35b6101fe60048036038101906101f991906111dc565b6104c3565b005b61021a60048036038101906102159190611306565b610560565b6040516102279190611261565b60405180910390f35b6102386105a8565b005b610242610630565b60405161024f9190611342565b60405180910390f35b61026061065a565b60405161026d9190611121565b60405180910390f35b610290600480360381019061028b91906111dc565b6106ec565b60405161029d9190611237565b60405180910390f35b6102c060048036038101906102bb91906111dc565b6107d6565b6040516102cd9190611237565b60405180910390f35b6102f060048036038101906102eb919061135d565b6107f9565b6040516102fd9190611261565b60405180910390f35b610320600480360381019061031b9190611306565b610880565b005b606060038054610331906113cc565b80601f016020809104026020016040519081016040528092919081815260200182805461035d906113cc565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf610978565b90506103cc818585610980565b600191505092915050565b6000600254905090565b6000806103ec610978565b90506103f9858285610b4b565b610404858585610bd7565b60019150509392505050565b60006012905090565b600080610424610978565b90506104b8818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104b3919061142d565b610980565b600191505092915050565b6104cb610978565b73ffffffffffffffffffffffffffffffffffffffff166104e9610630565b73ffffffffffffffffffffffffffffffffffffffff161461053f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610536906114cf565b60405180910390fd5b61055c82670de0b6b3a76400008361055791906114ef565b610e58565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105b0610978565b73ffffffffffffffffffffffffffffffffffffffff166105ce610630565b73ffffffffffffffffffffffffffffffffffffffff1614610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b906114cf565b60405180910390fd5b61062e6000610fb8565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610669906113cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610695906113cc565b80156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b5050505050905090565b6000806106f7610978565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b4906115bb565b60405180910390fd5b6107ca8286868403610980565b60019250505092915050565b6000806107e1610978565b90506107ee818585610bd7565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610888610978565b73ffffffffffffffffffffffffffffffffffffffff166108a6610630565b73ffffffffffffffffffffffffffffffffffffffff16146108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f3906114cf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561096c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109639061164d565b60405180910390fd5b61097581610fb8565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e7906116df565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5790611771565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b3e9190611261565b60405180910390a3505050565b6000610b5784846107f9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bd15781811015610bc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bba906117dd565b60405180910390fd5b610bd08484848403610980565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3e9061186f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cae90611901565b60405180910390fd5b610cc283838361107e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3f90611993565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ddb919061142d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e3f9190611261565b60405180910390a3610e52848484611083565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ec8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebf906119ff565b60405180910390fd5b610ed46000838361107e565b8060026000828254610ee6919061142d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f3b919061142d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fa09190611261565b60405180910390a3610fb460008383611083565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110c25780820151818401526020810190506110a7565b838111156110d1576000848401525b50505050565b6000601f19601f8301169050919050565b60006110f382611088565b6110fd8185611093565b935061110d8185602086016110a4565b611116816110d7565b840191505092915050565b6000602082019050818103600083015261113b81846110e8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061117382611148565b9050919050565b61118381611168565b811461118e57600080fd5b50565b6000813590506111a08161117a565b92915050565b6000819050919050565b6111b9816111a6565b81146111c457600080fd5b50565b6000813590506111d6816111b0565b92915050565b600080604083850312156111f3576111f2611143565b5b600061120185828601611191565b9250506020611212858286016111c7565b9150509250929050565b60008115159050919050565b6112318161121c565b82525050565b600060208201905061124c6000830184611228565b92915050565b61125b816111a6565b82525050565b60006020820190506112766000830184611252565b92915050565b60008060006060848603121561129557611294611143565b5b60006112a386828701611191565b93505060206112b486828701611191565b92505060406112c5868287016111c7565b9150509250925092565b600060ff82169050919050565b6112e5816112cf565b82525050565b600060208201905061130060008301846112dc565b92915050565b60006020828403121561131c5761131b611143565b5b600061132a84828501611191565b91505092915050565b61133c81611168565b82525050565b60006020820190506113576000830184611333565b92915050565b6000806040838503121561137457611373611143565b5b600061138285828601611191565b925050602061139385828601611191565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113e457607f821691505b602082108114156113f8576113f761139d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611438826111a6565b9150611443836111a6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611478576114776113fe565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114b9602083611093565b91506114c482611483565b602082019050919050565b600060208201905081810360008301526114e8816114ac565b9050919050565b60006114fa826111a6565b9150611505836111a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561153e5761153d6113fe565b5b828202905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006115a5602583611093565b91506115b082611549565b604082019050919050565b600060208201905081810360008301526115d481611598565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611637602683611093565b9150611642826115db565b604082019050919050565b600060208201905081810360008301526116668161162a565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006116c9602483611093565b91506116d48261166d565b604082019050919050565b600060208201905081810360008301526116f8816116bc565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061175b602283611093565b9150611766826116ff565b604082019050919050565b6000602082019050818103600083015261178a8161174e565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006117c7601d83611093565b91506117d282611791565b602082019050919050565b600060208201905081810360008301526117f6816117ba565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611859602583611093565b9150611864826117fd565b604082019050919050565b600060208201905081810360008301526118888161184c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118eb602383611093565b91506118f68261188f565b604082019050919050565b6000602082019050818103600083015261191a816118de565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061197d602683611093565b915061198882611921565b604082019050919050565b600060208201905081810360008301526119ac81611970565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006119e9601f83611093565b91506119f4826119b3565b602082019050919050565b60006020820190508181036000830152611a18816119dc565b905091905056fea26469706673582212207890ca64cca706719dc851216cf570124062914a6b58bac3b12ac60283af169f64736f6c634300080b0033608060405234801561001057600080fd5b50604051610575380380610575833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b61045e806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a0a8045e1461003b578063ac41865a14610059575b600080fd5b610043610089565b6040516100509190610213565b60405180910390f35b610073600480360381019061006e9190610291565b61014b565b6040516100809190610213565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bcfd032d73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6103486040518363ffffffff1660e01b81526004016100fd9291906102e0565b60a060405180830381865afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e91906103ad565b5050509150508091505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bcfd032d85856040518363ffffffff1660e01b81526004016101a99291906102e0565b60a060405180830381865afa1580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea91906103ad565b5050509150508091505092915050565b6000819050919050565b61020d816101fa565b82525050565b60006020820190506102286000830184610204565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061025e82610233565b9050919050565b61026e81610253565b811461027957600080fd5b50565b60008135905061028b81610265565b92915050565b600080604083850312156102a8576102a761022e565b5b60006102b68582860161027c565b92505060206102c78582860161027c565b9150509250929050565b6102da81610253565b82525050565b60006040820190506102f560008301856102d1565b61030260208301846102d1565b9392505050565b600069ffffffffffffffffffff82169050919050565b61032881610309565b811461033357600080fd5b50565b6000815190506103458161031f565b92915050565b610354816101fa565b811461035f57600080fd5b50565b6000815190506103718161034b565b92915050565b6000819050919050565b61038a81610377565b811461039557600080fd5b50565b6000815190506103a781610381565b92915050565b600080600080600060a086880312156103c9576103c861022e565b5b60006103d788828901610336565b95505060206103e888828901610362565b94505060406103f988828901610398565b935050606061040a88828901610398565b925050608061041b88828901610336565b915050929550929590935056fea2646970667358221220a4b6846e738df2fdd3a97f4a335340ce7155393e35f1456113b18b34590cf15164736f6c634300080b003360806040523480156200001157600080fd5b5060405162001e0e38038062001e0e8339818101604052810190620000379190620006b3565b6040518060400160405280600a81526020017f4269646f6e546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f42494400000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620005c3565b508060049080519060200190620000d4929190620005c3565b505050620000fe33670de0b6b3a764000083620000f2919062000714565b6200016760201b60201c565b6200012e736b9084732b0f209fca6b5581e787898aba81b377690fe1c215e8f838e00000620002e060201b60201c565b506200015f7338762fda39d327f772da6d66a5bb712939c6c08669054b40b1f852bda00000620002e060201b60201c565b505062000ab0565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001d190620007d6565b60405180910390fd5b620001ee600083836200031360201b60201c565b8060026000828254620002029190620007f8565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002599190620007f8565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002c0919062000866565b60405180910390a3620002dc600083836200031860201b60201c565b5050565b600080620002f36200031d60201b60201c565b9050620003088185856200032560201b60201c565b600191505092915050565b505050565b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000398576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200038f90620008f9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200040b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004029062000991565b60405180910390fd5b6200041e8383836200031360201b60201c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620004a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200049e9062000a29565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200053c9190620007f8565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051620005a2919062000866565b60405180910390a3620005bd8484846200031860201b60201c565b50505050565b828054620005d19062000a7a565b90600052602060002090601f016020900481019282620005f5576000855562000641565b82601f106200061057805160ff191683800117855562000641565b8280016001018555821562000641579182015b828111156200064057825182559160200191906001019062000623565b5b50905062000650919062000654565b5090565b5b808211156200066f57600081600090555060010162000655565b5090565b600080fd5b6000819050919050565b6200068d8162000678565b81146200069957600080fd5b50565b600081519050620006ad8162000682565b92915050565b600060208284031215620006cc57620006cb62000673565b5b6000620006dc848285016200069c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007218262000678565b91506200072e8362000678565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200076a5762000769620006e5565b5b828202905092915050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620007be601f8362000775565b9150620007cb8262000786565b602082019050919050565b60006020820190508181036000830152620007f181620007af565b9050919050565b6000620008058262000678565b9150620008128362000678565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200084a5762000849620006e5565b5b828201905092915050565b620008608162000678565b82525050565b60006020820190506200087d600083018462000855565b92915050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000620008e160258362000775565b9150620008ee8262000883565b604082019050919050565b600060208201905081810360008301526200091481620008d2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006200097960238362000775565b915062000986826200091b565b604082019050919050565b60006020820190508181036000830152620009ac816200096a565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600062000a1160268362000775565b915062000a1e82620009b3565b604082019050919050565b6000602082019050818103600083015262000a448162000a02565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a9357607f821691505b6020821081141562000aaa5762000aa962000a4b565b5b50919050565b61134e8062000ac06000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610c08565b60405180910390f35b6100e660048036038101906100e19190610cc3565b610308565b6040516100f39190610d1e565b60405180910390f35b61010461032b565b6040516101119190610d48565b60405180910390f35b610134600480360381019061012f9190610d63565b610335565b6040516101419190610d1e565b60405180910390f35b610152610364565b60405161015f9190610dd2565b60405180910390f35b610182600480360381019061017d9190610cc3565b61036d565b60405161018f9190610d1e565b60405180910390f35b6101b260048036038101906101ad9190610ded565b610417565b6040516101bf9190610d48565b60405180910390f35b6101d061045f565b6040516101dd9190610c08565b60405180910390f35b61020060048036038101906101fb9190610cc3565b6104f1565b60405161020d9190610d1e565b60405180910390f35b610230600480360381019061022b9190610cc3565b6105db565b60405161023d9190610d1e565b60405180910390f35b610260600480360381019061025b9190610e1a565b6105fe565b60405161026d9190610d48565b60405180910390f35b60606003805461028590610e89565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610e89565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600080610313610685565b905061032081858561068d565b600191505092915050565b6000600254905090565b600080610340610685565b905061034d858285610858565b6103588585856108e4565b60019150509392505050565b60006012905090565b600080610378610685565b905061040c818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104079190610eea565b61068d565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461046e90610e89565b80601f016020809104026020016040519081016040528092919081815260200182805461049a90610e89565b80156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b6000806104fc610685565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610fb2565b60405180910390fd5b6105cf828686840361068d565b60019250505092915050565b6000806105e6610685565b90506105f38185856108e4565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f490611044565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561076d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610764906110d6565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161084b9190610d48565b60405180910390a3505050565b600061086484846105fe565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108de57818110156108d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c790611142565b60405180910390fd5b6108dd848484840361068d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094b906111d4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bb90611266565b60405180910390fd5b6109cf838383610b65565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4c906112f8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ae89190610eea565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b4c9190610d48565b60405180910390a3610b5f848484610b6a565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ba9578082015181840152602081019050610b8e565b83811115610bb8576000848401525b50505050565b6000601f19601f8301169050919050565b6000610bda82610b6f565b610be48185610b7a565b9350610bf4818560208601610b8b565b610bfd81610bbe565b840191505092915050565b60006020820190508181036000830152610c228184610bcf565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c5a82610c2f565b9050919050565b610c6a81610c4f565b8114610c7557600080fd5b50565b600081359050610c8781610c61565b92915050565b6000819050919050565b610ca081610c8d565b8114610cab57600080fd5b50565b600081359050610cbd81610c97565b92915050565b60008060408385031215610cda57610cd9610c2a565b5b6000610ce885828601610c78565b9250506020610cf985828601610cae565b9150509250929050565b60008115159050919050565b610d1881610d03565b82525050565b6000602082019050610d336000830184610d0f565b92915050565b610d4281610c8d565b82525050565b6000602082019050610d5d6000830184610d39565b92915050565b600080600060608486031215610d7c57610d7b610c2a565b5b6000610d8a86828701610c78565b9350506020610d9b86828701610c78565b9250506040610dac86828701610cae565b9150509250925092565b600060ff82169050919050565b610dcc81610db6565b82525050565b6000602082019050610de76000830184610dc3565b92915050565b600060208284031215610e0357610e02610c2a565b5b6000610e1184828501610c78565b91505092915050565b60008060408385031215610e3157610e30610c2a565b5b6000610e3f85828601610c78565b9250506020610e5085828601610c78565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ea157607f821691505b60208210811415610eb557610eb4610e5a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ef582610c8d565b9150610f0083610c8d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f3557610f34610ebb565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610f9c602583610b7a565b9150610fa782610f40565b604082019050919050565b60006020820190508181036000830152610fcb81610f8f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061102e602483610b7a565b915061103982610fd2565b604082019050919050565b6000602082019050818103600083015261105d81611021565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006110c0602283610b7a565b91506110cb82611064565b604082019050919050565b600060208201905081810360008301526110ef816110b3565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061112c601d83610b7a565b9150611137826110f6565b602082019050919050565b6000602082019050818103600083015261115b8161111f565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006111be602583610b7a565b91506111c982611162565b604082019050919050565b600060208201905081810360008301526111ed816111b1565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611250602383610b7a565b915061125b826111f4565b604082019050919050565b6000602082019050818103600083015261127f81611243565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006112e2602683610b7a565b91506112ed82611286565b604082019050919050565b60006020820190508181036000830152611311816112d5565b905091905056fea26469706673582212203a458675dcc2bc1a6e06f689642145e5117e61f563baafbf18ffabc2b3c843e764736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a4e47b6611610097578063d1f8680611610066578063d1f868061461029e578063eaaa65ed146102bc578063f2888dbb146102da578063f9a88fc4146102f6576100f5565b8063a4e47b6614610214578063adc9772e14610248578063c00007b014610264578063d1af0c7d14610280576100f5565b8063461a758c116100d3578063461a758c146101785780636a36c343146101965780638a98e629146101c65780638da84478146101e4576100f5565b8063273cbaa0146100fa5780632c2332fe14610118578063369ba1ac14610148575b600080fd5b610102610314565b60405161010f91906119c6565b60405180910390f35b610132600480360381019061012d9190611a19565b6103a2565b60405161013f9190611a5f565b60405180910390f35b610162600480360381019061015d9190611aa6565b6103ba565b60405161016f9190611ae2565b60405180910390f35b6101806103f9565b60405161018d9190611b5c565b60405180910390f35b6101b060048036038101906101ab9190611aa6565b61041f565b6040516101bd9190611ae2565b60405180910390f35b6101ce61045e565b6040516101db9190611b98565b60405180910390f35b6101fe60048036038101906101f99190611a19565b610484565b60405161020b9190611a5f565b60405180910390f35b61022e60048036038101906102299190611bb3565b61054a565b60405161023f959493929190611c0e565b60405180910390f35b610262600480360381019061025d9190611c61565b61059a565b005b61027e60048036038101906102799190611a19565b610c08565b005b6102886110c4565b6040516102959190611cc2565b60405180910390f35b6102a66110e8565b6040516102b39190611a5f565b60405180910390f35b6102c46111f2565b6040516102d19190611cf9565b60405180910390f35b6102f460048036038101906102ef9190611a19565b611205565b005b6102fe6116ab565b60405161030b9190611cf9565b60405180910390f35b6060600580548060200260200160405190810160405280929190818152602001828054801561039857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161034e575b5050505050905090565b60036020528060005260406000206000915090505481565b600481815481106103ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005818154811061042f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac41865a846103486040518363ffffffff1660e01b81526004016104e6929190611d14565b602060405180830381865afa158015610503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105279190611d73565b9050600081126105375780610542565b8061054190611dcf565b5b915050919050565b6002602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b80600081116105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611e75565b60405180910390fd5b818373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161061a929190611d14565b602060405180830381865afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b9190611eaa565b101561069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069390611f23565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1661088d5760004290506040518060a001604052808481526020018281526020018281526020016000815260200160011515815250600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610a47565b61089783336116cf565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546109259190611f43565b9250508190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109bb9190611f43565b9250508190555042600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a969190611f43565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610b47576005839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b8493929190611f99565b6020604051808303816000875af1158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc79190611ffc565b507f9b52f0c543858b9187b0b963bc5c12e3f5d09f9426891c3d8fe69aed57cfcfdf338385604051610bfb93929190612029565b60405180910390a1505050565b8033600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1680610d2157506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154115b610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d57906120ac565b60405180910390fd5b601e600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015442610ded91906120cc565b11610e2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e249061214c565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015490506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610f5157610f4384336116cf565b81610f4e9190611f43565b90505b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b815260040161103192919061216c565b600060405180830381600087803b15801561104b57600080fd5b505af115801561105f573d6000803e3d6000fd5b505050507f6e2e634c7351983b01159f0afca4d5c2d0bac5da2a3017a29d3faf7138c98a4d338260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516110b693929190612029565b60405180910390a150505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060005b6005805490508110156111ea57600360006005838154811061111357611112612195565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111c0600583815481106111905761118f612195565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610484565b6111ca91906121c4565b826111d59190611f43565b915080806111e29061221e565b9150506110ee565b508091505090565b600660009054906101000a900460ff1681565b8033600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff168061131e57506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154115b61135d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611354906120ac565b60405180910390fd5b600a600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546113ed9190611f43565b925050819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114c791906120cc565b925050819055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161162692919061216c565b6020604051808303816000875af1158015611645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116699190611ffc565b507f7b5ffc292164c35fc3df96417675489512b1cd7e4198684766b374531ab32c1d33828660405161169d93929190612029565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060646116dc6110e8565b6116e691906121c4565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461176f86610484565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426117fa91906120cc565b7f000000000000000000000000000000000000000000000000000000000000000060ff1661182891906121c4565b61183291906121c4565b61183c91906121c4565b6118469190612296565b905042600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061192d82611902565b9050919050565b61193d81611922565b82525050565b600061194f8383611934565b60208301905092915050565b6000602082019050919050565b6000611973826118d6565b61197d81856118e1565b9350611988836118f2565b8060005b838110156119b95781516119a08882611943565b97506119ab8361195b565b92505060018101905061198c565b5085935050505092915050565b600060208201905081810360008301526119e08184611968565b905092915050565b600080fd5b6119f681611922565b8114611a0157600080fd5b50565b600081359050611a13816119ed565b92915050565b600060208284031215611a2f57611a2e6119e8565b5b6000611a3d84828501611a04565b91505092915050565b6000819050919050565b611a5981611a46565b82525050565b6000602082019050611a746000830184611a50565b92915050565b611a8381611a46565b8114611a8e57600080fd5b50565b600081359050611aa081611a7a565b92915050565b600060208284031215611abc57611abb6119e8565b5b6000611aca84828501611a91565b91505092915050565b611adc81611922565b82525050565b6000602082019050611af76000830184611ad3565b92915050565b6000819050919050565b6000611b22611b1d611b1884611902565b611afd565b611902565b9050919050565b6000611b3482611b07565b9050919050565b6000611b4682611b29565b9050919050565b611b5681611b3b565b82525050565b6000602082019050611b716000830184611b4d565b92915050565b6000611b8282611b29565b9050919050565b611b9281611b77565b82525050565b6000602082019050611bad6000830184611b89565b92915050565b60008060408385031215611bca57611bc96119e8565b5b6000611bd885828601611a04565b9250506020611be985828601611a04565b9150509250929050565b60008115159050919050565b611c0881611bf3565b82525050565b600060a082019050611c236000830188611a50565b611c306020830187611a50565b611c3d6040830186611a50565b611c4a6060830185611a50565b611c576080830184611bff565b9695505050505050565b60008060408385031215611c7857611c776119e8565b5b6000611c8685828601611a04565b9250506020611c9785828601611a91565b9150509250929050565b6000611cac82611b29565b9050919050565b611cbc81611ca1565b82525050565b6000602082019050611cd76000830184611cb3565b92915050565b600060ff82169050919050565b611cf381611cdd565b82525050565b6000602082019050611d0e6000830184611cea565b92915050565b6000604082019050611d296000830185611ad3565b611d366020830184611ad3565b9392505050565b6000819050919050565b611d5081611d3d565b8114611d5b57600080fd5b50565b600081519050611d6d81611d47565b92915050565b600060208284031215611d8957611d886119e8565b5b6000611d9784828501611d5e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dda82611d3d565b91507f8000000000000000000000000000000000000000000000000000000000000000821415611e0d57611e0c611da0565b5b816000039050919050565b600082825260208201905092915050565b7f416d6f756e74203c3d2030000000000000000000000000000000000000000000600082015250565b6000611e5f600b83611e18565b9150611e6a82611e29565b602082019050919050565b60006020820190508181036000830152611e8e81611e52565b9050919050565b600081519050611ea481611a7a565b92915050565b600060208284031215611ec057611ebf6119e8565b5b6000611ece84828501611e95565b91505092915050565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b6000611f0d601983611e18565b9150611f1882611ed7565b602082019050919050565b60006020820190508181036000830152611f3c81611f00565b9050919050565b6000611f4e82611a46565b9150611f5983611a46565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f8e57611f8d611da0565b5b828201905092915050565b6000606082019050611fae6000830186611ad3565b611fbb6020830185611ad3565b611fc86040830184611a50565b949350505050565b611fd981611bf3565b8114611fe457600080fd5b50565b600081519050611ff681611fd0565b92915050565b600060208284031215612012576120116119e8565b5b600061202084828501611fe7565b91505092915050565b600060608201905061203e6000830186611ad3565b61204b6020830185611a50565b6120586040830184611ad3565b949350505050565b7f4e6f742061207374616b6572206f72206e6f2072657761726473000000000000600082015250565b6000612096601a83611e18565b91506120a182612060565b602082019050919050565b600060208201905081810360008301526120c581612089565b9050919050565b60006120d782611a46565b91506120e283611a46565b9250828210156120f5576120f4611da0565b5b828203905092915050565b7f73746f70207370616d0000000000000000000000000000000000000000000000600082015250565b6000612136600983611e18565b915061214182612100565b602082019050919050565b6000602082019050818103600083015261216581612129565b9050919050565b60006040820190506121816000830185611ad3565b61218e6020830184611a50565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006121cf82611a46565b91506121da83611a46565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561221357612212611da0565b5b828202905092915050565b600061222982611a46565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561225c5761225b611da0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006122a182611a46565b91506122ac83611a46565b9250826122bc576122bb612267565b5b82820490509291505056fea2646970667358221220133e918567185dec60ded12995dab1af21abd711e9343541bc1a44f23338055664736f6c634300080b0033",
  "immutableReferences": {
    "2032": [
      {
        "length": 32,
        "start": 5805
      },
      {
        "length": 32,
        "start": 6140
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1426:16",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:16",
                "type": ""
              }
            ],
            "src": "7:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:16",
                "type": ""
              }
            ],
            "src": "139:96:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:16"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:16",
                "type": ""
              }
            ],
            "src": "241:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:16",
                "type": ""
              }
            ],
            "src": "365:222:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "651:32:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "661:16:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "672:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "661:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_100000_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "633:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "643:7:16",
                "type": ""
              }
            ],
            "src": "593:90:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "734:32:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "744:16:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "755:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "744:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "716:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "726:7:16",
                "type": ""
              }
            ],
            "src": "689:77:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "804:28:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "814:12:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "821:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "814:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "790:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "800:3:16",
                "type": ""
              }
            ],
            "src": "772:60:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "911:95:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "921:79:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "992:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_100000_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "961:30:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "961:37:16"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "952:8:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "952:47:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "934:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "934:66:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "921:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_100000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "891:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "901:9:16",
                "type": ""
              }
            ],
            "src": "838:168:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1090:79:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1107:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1156:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_100000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1112:43:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1112:50:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1100:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:63:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1100:63:16"
                }
              ]
            },
            "name": "abi_encode_t_rational_100000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1078:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1085:3:16",
                "type": ""
              }
            ],
            "src": "1012:157:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1286:137:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1296:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1308:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1319:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1304:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1304:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1296:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1389:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1402:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1413:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1398:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1398:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_100000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1332:56:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:84:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1332:84:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_100000_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1258:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1270:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1281:4:16",
                "type": ""
              }
            ],
            "src": "1175:248:16"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_100000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_100000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_100000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_100000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_100000_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_100000_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18512:16",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "81:40:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "92:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "108:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "102:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "92:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "74:6:16",
                "type": ""
              }
            ],
            "src": "7:114:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "238:73:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "255:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "260:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "248:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "248:19:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "248:19:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "276:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "295:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "300:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "291:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "291:14:16"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "276:11:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "210:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "215:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "226:11:16",
                "type": ""
              }
            ],
            "src": "127:184:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "389:60:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "399:11:16",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "407:3:16"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "399:4:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "420:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "432:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "437:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "428:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:14:16"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "420:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "376:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "384:4:16",
                "type": ""
              }
            ],
            "src": "317:132:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "500:81:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "510:65:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "525:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "532:42:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "521:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "510:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "482:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "492:7:16",
                "type": ""
              }
            ],
            "src": "455:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "632:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "642:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "671:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "653:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "642:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "614:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "624:7:16",
                "type": ""
              }
            ],
            "src": "587:96:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "744:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "761:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "784:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "766:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "766:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "754:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "754:37:16"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "732:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "739:3:16",
                "type": ""
              }
            ],
            "src": "689:108:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "883:99:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "927:6:16"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "935:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "893:33:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "893:46:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "893:46:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "948:28:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "966:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "971:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "962:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:14:16"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "948:10:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "856:6:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "864:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "872:10:16",
                "type": ""
              }
            ],
            "src": "803:179:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1063:38:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1073:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "1085:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1081:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:14:16"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "1073:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1050:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "1058:4:16",
                "type": ""
              }
            ],
            "src": "988:113:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1261:608:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1271:68:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1333:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1285:47:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1285:54:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1275:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1348:93:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1429:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1434:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1355:73:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1355:86:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1348:3:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1450:71:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1515:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1465:49:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1465:56:16"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "1454:7:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1530:21:16",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "1544:7:16"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1534:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1620:224:16",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1634:34:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1661:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1655:5:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1655:13:16"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "1638:13:16",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1681:70:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "1732:13:16"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1747:3:16"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "1688:43:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1688:63:16"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1681:3:16"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1764:70:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1827:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "1774:52:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1774:60:16"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1764:6:16"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1582:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1585:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1579:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1579:13:16"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1593:18:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1595:14:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1604:1:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1607:1:16",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1600:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1600:9:16"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1595:1:16"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1564:14:16",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1566:10:16",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1575:1:16",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "1570:1:16",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "1560:284:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1853:10:16",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1860:3:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1853:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1240:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1247:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1256:3:16",
                "type": ""
              }
            ],
            "src": "1137:732:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2023:225:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2033:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2045:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2056:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2041:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2041:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2033:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2080:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2091:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2076:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2076:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2099:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2105:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2095:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2095:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2069:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2069:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2069:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2125:116:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2227:6:16"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2236:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2133:93:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2133:108:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2125:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1995:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2007:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2018:4:16",
                "type": ""
              }
            ],
            "src": "1875:373:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2294:35:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2304:19:16",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2320:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2314:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2314:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2304:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2287:6:16",
                "type": ""
              }
            ],
            "src": "2254:75:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2424:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2441:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2444:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2434:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2434:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2434:12:16"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "2335:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2547:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2564:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2567:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2557:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2557:12:16"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "2458:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2624:79:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2681:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2690:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2693:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2683:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2683:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2683:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2647:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2672:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2654:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2654:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2644:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2644:35:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2637:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2637:43:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2634:63:16"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2617:5:16",
                "type": ""
              }
            ],
            "src": "2581:122:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2761:87:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2771:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2793:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2780:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2780:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2771:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2836:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2809:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2809:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2809:33:16"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2739:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2747:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2755:5:16",
                "type": ""
              }
            ],
            "src": "2709:139:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2920:263:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2966:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2968:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2968:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2968:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2941:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2950:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2937:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2937:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2962:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2933:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2933:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2930:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3059:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3074:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3088:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3078:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3103:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3138:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3149:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3134:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3134:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3158:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3113:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3113:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3103:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2890:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2901:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2913:6:16",
                "type": ""
              }
            ],
            "src": "2854:329:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3234:32:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3244:16:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3255:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3244:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3216:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3226:7:16",
                "type": ""
              }
            ],
            "src": "3189:77:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3337:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3354:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3377:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3359:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3359:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3347:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3347:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3347:37:16"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3325:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3332:3:16",
                "type": ""
              }
            ],
            "src": "3272:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3494:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3504:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3516:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3527:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3512:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3512:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3504:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3584:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3597:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3608:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3593:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3593:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3540:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3540:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3540:71:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3466:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3478:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3489:4:16",
                "type": ""
              }
            ],
            "src": "3396:222:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3667:79:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3724:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3733:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3736:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3726:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3726:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3726:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3690:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3715:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3697:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3697:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3687:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3687:35:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3680:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3680:43:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3677:63:16"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3660:5:16",
                "type": ""
              }
            ],
            "src": "3624:122:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3804:87:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3814:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3836:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3823:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3823:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3814:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3879:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3852:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3852:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3852:33:16"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3782:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3790:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3798:5:16",
                "type": ""
              }
            ],
            "src": "3752:139:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3963:263:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4009:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4011:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4011:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4011:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3984:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3993:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3980:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3980:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4005:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3976:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3976:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3973:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4102:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4117:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4131:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4121:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4146:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4181:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4192:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4177:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4177:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4201:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4156:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4156:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4146:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3933:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3944:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3956:6:16",
                "type": ""
              }
            ],
            "src": "3897:329:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4297:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4314:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4337:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4319:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4319:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4307:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4307:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4307:37:16"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4285:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4292:3:16",
                "type": ""
              }
            ],
            "src": "4232:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4454:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4464:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4476:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4487:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4472:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4472:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4464:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4544:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4557:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4568:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4553:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4553:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4500:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4500:71:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4426:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4438:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4449:4:16",
                "type": ""
              }
            ],
            "src": "4356:222:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4616:28:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4626:12:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4633:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "4626:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4602:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "4612:3:16",
                "type": ""
              }
            ],
            "src": "4584:60:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4710:82:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4720:66:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4778:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "4760:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4760:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "4751:8:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4751:34:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4733:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4733:53:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4720:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4690:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4700:9:16",
                "type": ""
              }
            ],
            "src": "4650:142:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4858:66:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4868:50:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4912:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4881:30:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4881:37:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4868:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4838:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4848:9:16",
                "type": ""
              }
            ],
            "src": "4798:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5012:66:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5022:50:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5066:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "5035:30:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5035:37:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5022:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_PriceConsumer_$2635_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4992:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5002:9:16",
                "type": ""
              }
            ],
            "src": "4930:148:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5171:88:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5188:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5246:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_PriceConsumer_$2635_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5193:52:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5193:59:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5181:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5181:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5181:72:16"
                }
              ]
            },
            "name": "abi_encode_t_contract$_PriceConsumer_$2635_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5159:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5166:3:16",
                "type": ""
              }
            ],
            "src": "5084:175:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5385:146:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5395:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5407:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5418:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5403:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5403:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5395:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5497:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5510:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5521:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5506:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5506:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_PriceConsumer_$2635_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5431:65:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5431:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5431:93:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PriceConsumer_$2635__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5357:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5369:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5380:4:16",
                "type": ""
              }
            ],
            "src": "5265:266:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5616:66:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5626:50:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5670:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "5639:30:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5639:37:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5626:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_TokenBidon_$2679_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5596:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5606:9:16",
                "type": ""
              }
            ],
            "src": "5537:145:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5772:85:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5789:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5844:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_TokenBidon_$2679_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5794:49:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5794:56:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5782:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5782:69:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5782:69:16"
                }
              ]
            },
            "name": "abi_encode_t_contract$_TokenBidon_$2679_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5760:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5767:3:16",
                "type": ""
              }
            ],
            "src": "5688:169:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5980:143:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5990:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6002:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6013:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5998:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5998:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5990:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6089:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6102:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6113:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6098:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6098:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_TokenBidon_$2679_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6026:62:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6026:90:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6026:90:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_TokenBidon_$2679__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5952:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5964:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5975:4:16",
                "type": ""
              }
            ],
            "src": "5863:260:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6212:391:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6258:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6260:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6260:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6260:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6233:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6242:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6229:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6229:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6254:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6225:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6225:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "6222:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6351:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6366:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6380:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6370:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6395:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6430:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6441:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6426:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6426:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6450:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6405:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6405:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6395:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6478:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6493:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6507:2:16",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6497:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6523:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6558:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6569:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6554:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6554:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6578:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6533:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6533:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6523:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6174:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6185:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6197:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6205:6:16",
                "type": ""
              }
            ],
            "src": "6129:474:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6651:48:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6661:32:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6686:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6679:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6679:13:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6672:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6672:21:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6661:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6633:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6643:7:16",
                "type": ""
              }
            ],
            "src": "6609:90:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6764:50:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6781:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6801:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "6786:14:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6786:21:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6774:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6774:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6774:34:16"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6752:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6759:3:16",
                "type": ""
              }
            ],
            "src": "6705:109:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7024:448:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7034:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7046:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7057:3:16",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7042:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7042:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7034:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7115:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7128:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7139:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7124:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7124:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7071:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7071:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7071:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7196:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7209:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7220:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7205:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7205:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7152:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7152:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7152:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7278:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7291:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7302:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7287:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7287:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7234:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7234:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7234:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7360:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7373:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7384:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7369:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7369:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7316:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7316:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7316:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7436:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7449:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7460:3:16",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7445:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7445:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7398:37:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7398:67:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7398:67:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6964:9:16",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6976:6:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6984:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6992:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7000:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7008:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7019:4:16",
                "type": ""
              }
            ],
            "src": "6820:652:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7561:391:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7607:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7609:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7609:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7609:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7582:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7591:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7578:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7578:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7603:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7574:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7574:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7571:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7700:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7715:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7729:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7719:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7744:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7779:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7790:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7775:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7775:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7799:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7754:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7754:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7744:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7827:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7842:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7856:2:16",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7846:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7872:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7907:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7918:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7903:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7903:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7927:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7882:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7882:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7872:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7523:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7534:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7546:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7554:6:16",
                "type": ""
              }
            ],
            "src": "7478:474:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8035:66:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8045:50:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8089:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "8058:30:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8058:37:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8045:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_AALToken_$1385_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8015:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8025:9:16",
                "type": ""
              }
            ],
            "src": "7958:143:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8189:83:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8206:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8259:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_AALToken_$1385_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8211:47:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8211:54:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8199:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8199:67:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8199:67:16"
                }
              ]
            },
            "name": "abi_encode_t_contract$_AALToken_$1385_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8177:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8184:3:16",
                "type": ""
              }
            ],
            "src": "8107:165:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8393:141:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8403:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8415:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8426:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8411:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8411:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8403:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8500:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8513:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8524:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8509:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8509:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_AALToken_$1385_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8439:60:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8439:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8439:88:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_AALToken_$1385__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8365:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8377:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8388:4:16",
                "type": ""
              }
            ],
            "src": "8278:256:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8583:43:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8593:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8608:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8615:4:16",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8604:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8604:16:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8593:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8565:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8575:7:16",
                "type": ""
              }
            ],
            "src": "8540:86:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8693:51:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8710:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8731:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "8715:15:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8715:22:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8703:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8703:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8703:35:16"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8681:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8688:3:16",
                "type": ""
              }
            ],
            "src": "8632:112:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8844:120:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8854:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8866:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8877:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8862:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8862:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8854:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8930:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8943:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8954:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8939:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8939:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8890:39:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8890:67:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8890:67:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8816:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8828:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8839:4:16",
                "type": ""
              }
            ],
            "src": "8750:214:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9096:206:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9106:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9118:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9129:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9114:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9114:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9106:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9186:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9199:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9210:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9195:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9195:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9142:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9142:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9142:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9267:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9280:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9291:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9276:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9276:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9223:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9223:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9223:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9060:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9072:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9080:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9091:4:16",
                "type": ""
              }
            ],
            "src": "8970:332:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9352:32:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9362:16:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9373:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9362:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9334:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9344:7:16",
                "type": ""
              }
            ],
            "src": "9308:76:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9432:78:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9488:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9497:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9500:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9490:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9490:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9490:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9455:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9479:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "9462:16:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9462:23:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9452:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9452:34:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9445:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9445:42:16"
                  },
                  "nodeType": "YulIf",
                  "src": "9442:62:16"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9425:5:16",
                "type": ""
              }
            ],
            "src": "9390:120:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9578:79:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9588:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9603:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9597:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9597:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9588:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9645:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "9619:25:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9619:32:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9619:32:16"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9556:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9564:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9572:5:16",
                "type": ""
              }
            ],
            "src": "9516:141:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9739:273:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9785:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9787:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9787:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9787:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9760:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9769:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9756:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9756:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9781:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9752:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9752:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "9749:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9878:127:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9893:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9907:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9897:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9922:73:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9967:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9978:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9963:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9963:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9987:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9932:30:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9932:63:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9922:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9709:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9720:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9732:6:16",
                "type": ""
              }
            ],
            "src": "9663:349:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10046:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10063:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10066:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10056:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10056:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10056:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10160:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10163:4:16",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10153:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10153:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10153:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10184:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10187:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10177:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10177:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10177:15:16"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10018:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10243:189:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10253:32:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10279:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "10262:16:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10262:23:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10253:5:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10375:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10377:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10377:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10377:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10300:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10307:66:16",
                        "type": "",
                        "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10297:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10297:77:16"
                  },
                  "nodeType": "YulIf",
                  "src": "10294:103:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10406:20:16",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10417:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10420:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10413:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10413:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10406:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "negate_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10229:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10239:3:16",
                "type": ""
              }
            ],
            "src": "10204:228:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10534:73:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10551:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10556:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10544:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10544:19:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10544:19:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10572:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10591:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10596:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10587:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10587:14:16"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10572:11:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10506:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10511:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10522:11:16",
                "type": ""
              }
            ],
            "src": "10438:169:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10719:55:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10741:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10749:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10737:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10737:14:16"
                      },
                      {
                        "hexValue": "416d6f756e74203c3d2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10753:13:16",
                        "type": "",
                        "value": "Amount <= 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10730:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10730:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10730:37:16"
                }
              ]
            },
            "name": "store_literal_in_memory_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10711:6:16",
                "type": ""
              }
            ],
            "src": "10613:161:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10926:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10936:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11002:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11007:2:16",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10943:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10943:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10936:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11108:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec",
                      "nodeType": "YulIdentifier",
                      "src": "11019:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11019:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11019:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11121:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11132:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11137:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11128:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11128:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11121:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10914:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10922:3:16",
                "type": ""
              }
            ],
            "src": "10780:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11323:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11333:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11345:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11356:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11341:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11341:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11333:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11380:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11391:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11376:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11376:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11399:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11405:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11395:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11395:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11369:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11369:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11369:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11425:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11559:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11433:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11433:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11425:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11303:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11318:4:16",
                "type": ""
              }
            ],
            "src": "11152:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11640:80:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11650:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11665:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11659:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11659:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11650:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11708:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11681:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11681:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11681:33:16"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11618:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11626:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11634:5:16",
                "type": ""
              }
            ],
            "src": "11577:143:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11803:274:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11849:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11851:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11851:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11851:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11824:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11833:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11820:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11820:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11845:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11816:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11816:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "11813:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11942:128:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11957:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11971:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11961:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11986:74:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12032:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12043:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12028:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12028:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12052:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11996:31:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11996:64:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11986:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11773:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11784:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11796:6:16",
                "type": ""
              }
            ],
            "src": "11726:351:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12189:69:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12211:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12219:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12207:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12207:14:16"
                      },
                      {
                        "hexValue": "436865636b2074686520746f6b656e20616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12223:27:16",
                        "type": "",
                        "value": "Check the token allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12200:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12200:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12200:51:16"
                }
              ]
            },
            "name": "store_literal_in_memory_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12181:6:16",
                "type": ""
              }
            ],
            "src": "12083:175:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12410:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12420:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12486:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12491:2:16",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12427:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12427:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12420:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12592:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                      "nodeType": "YulIdentifier",
                      "src": "12503:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12503:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12503:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12605:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12616:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12621:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12612:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12612:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12605:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12398:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12406:3:16",
                "type": ""
              }
            ],
            "src": "12264:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12807:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12817:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12829:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12840:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12825:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12825:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12817:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12864:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12875:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12860:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12860:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12883:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12889:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12879:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12879:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12853:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12853:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12853:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12909:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13043:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12917:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12917:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12909:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12787:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12802:4:16",
                "type": ""
              }
            ],
            "src": "12636:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13105:261:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13115:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13138:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13120:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13120:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13115:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13149:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13172:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13154:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13154:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13149:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13312:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13314:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13314:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13314:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13233:1:16"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13240:66:16",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13308:1:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13236:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13236:74:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13230:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13230:81:16"
                  },
                  "nodeType": "YulIf",
                  "src": "13227:107:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13344:16:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13355:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13358:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13351:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13351:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13344:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13092:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13095:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13101:3:16",
                "type": ""
              }
            ],
            "src": "13061:305:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13526:288:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13536:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13548:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13559:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13544:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13544:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13536:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13616:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13629:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13640:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13625:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13625:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13572:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13572:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13572:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13697:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13710:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13721:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13706:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13706:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13653:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13653:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13653:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "13779:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13792:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13803:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13788:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13788:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13735:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13735:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13735:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13482:9:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13494:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13502:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13510:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13521:4:16",
                "type": ""
              }
            ],
            "src": "13372:442:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13860:76:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13914:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13923:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13926:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13916:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13916:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13916:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13883:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13905:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "13890:14:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13890:21:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13880:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13880:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13873:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13873:40:16"
                  },
                  "nodeType": "YulIf",
                  "src": "13870:60:16"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13853:5:16",
                "type": ""
              }
            ],
            "src": "13820:116:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14002:77:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14012:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "14027:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14021:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14021:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "14012:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14067:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "14043:23:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14043:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14043:30:16"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "13980:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13988:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13996:5:16",
                "type": ""
              }
            ],
            "src": "13942:137:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14159:271:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14205:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "14207:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14207:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14207:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14180:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14189:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14176:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14176:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14201:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "14172:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14172:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "14169:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "14298:125:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14313:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14327:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "14317:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14342:71:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14385:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "14396:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14381:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14381:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14405:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "14352:28:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14352:61:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "14342:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14129:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "14140:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14152:6:16",
                "type": ""
              }
            ],
            "src": "14085:345:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14590:288:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14600:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14612:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14623:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14608:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14608:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14600:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14680:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14693:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14704:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14689:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14689:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14636:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14636:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14636:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14761:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14774:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14785:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14770:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14770:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14717:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14717:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14717:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14843:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14856:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14867:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14852:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14852:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14799:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14799:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14799:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14546:9:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14558:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14566:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14574:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14585:4:16",
                "type": ""
              }
            ],
            "src": "14436:442:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14990:70:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15012:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15020:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15008:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15008:14:16"
                      },
                      {
                        "hexValue": "4e6f742061207374616b6572206f72206e6f2072657761726473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15024:28:16",
                        "type": "",
                        "value": "Not a staker or no rewards"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15001:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15001:52:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15001:52:16"
                }
              ]
            },
            "name": "store_literal_in_memory_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14982:6:16",
                "type": ""
              }
            ],
            "src": "14884:176:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15212:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15222:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15288:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15293:2:16",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15229:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15229:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15222:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15394:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92",
                      "nodeType": "YulIdentifier",
                      "src": "15305:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15305:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15305:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15407:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15418:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15423:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15414:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15414:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15407:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15200:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15208:3:16",
                "type": ""
              }
            ],
            "src": "15066:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15609:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15619:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15631:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15642:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15627:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15627:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15619:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15666:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15677:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15662:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15662:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15685:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15691:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15681:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15681:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15655:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15655:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15655:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15711:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15845:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15719:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15719:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15711:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15589:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15604:4:16",
                "type": ""
              }
            ],
            "src": "15438:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15908:146:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15918:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15941:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15923:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15923:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15918:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15952:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15975:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15957:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15957:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15952:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15999:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16001:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16001:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16001:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15993:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15996:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "15990:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15990:8:16"
                  },
                  "nodeType": "YulIf",
                  "src": "15987:34:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16031:17:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16043:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16046:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "16039:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16039:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "16031:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15894:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15897:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "15903:4:16",
                "type": ""
              }
            ],
            "src": "15863:191:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16166:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16188:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16196:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16184:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16184:14:16"
                      },
                      {
                        "hexValue": "73746f70207370616d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16200:11:16",
                        "type": "",
                        "value": "stop spam"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16177:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16177:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16177:35:16"
                }
              ]
            },
            "name": "store_literal_in_memory_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16158:6:16",
                "type": ""
              }
            ],
            "src": "16060:159:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16371:219:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16381:73:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16447:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16452:1:16",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16388:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16388:66:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16381:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16552:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab",
                      "nodeType": "YulIdentifier",
                      "src": "16463:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16463:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16463:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16565:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16576:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16581:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16572:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16572:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16565:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16359:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16367:3:16",
                "type": ""
              }
            ],
            "src": "16225:365:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16767:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16777:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16789:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16800:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16785:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16785:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16777:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16824:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16835:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16820:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16820:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16843:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16849:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16839:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16839:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16813:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16813:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16813:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16869:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17003:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16877:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16877:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16869:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16747:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16762:4:16",
                "type": ""
              }
            ],
            "src": "16596:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17147:206:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17157:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17169:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17180:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17165:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17165:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17157:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17237:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17250:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17261:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17246:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17246:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17193:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17193:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17193:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "17318:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17331:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17342:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17327:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17327:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17274:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17274:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17274:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17111:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17123:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17131:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17142:4:16",
                "type": ""
              }
            ],
            "src": "17021:332:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17387:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17404:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17407:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17397:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17397:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17397:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17501:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17504:4:16",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17494:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17494:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17494:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17525:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17528:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17518:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17518:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17518:15:16"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "17359:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17593:300:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17603:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17626:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17608:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17608:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "17603:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17637:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17660:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17642:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17642:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "17637:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17835:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17837:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17837:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17837:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "17747:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "17740:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17740:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "17733:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17733:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "17755:1:16"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17762:66:16",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "17830:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "17758:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17758:74:16"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "17752:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17752:81:16"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17729:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17729:105:16"
                  },
                  "nodeType": "YulIf",
                  "src": "17726:131:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17867:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17882:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17885:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "17878:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17878:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "17867:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17576:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17579:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "17585:7:16",
                "type": ""
              }
            ],
            "src": "17545:348:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17942:190:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17952:33:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17979:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17961:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17961:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "17952:5:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18075:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18077:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18077:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18077:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18000:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18007:66:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "17997:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17997:77:16"
                  },
                  "nodeType": "YulIf",
                  "src": "17994:103:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18106:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18117:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18124:1:16",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18113:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18113:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "18106:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17928:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "17938:3:16",
                "type": ""
              }
            ],
            "src": "17899:233:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18166:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18183:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18186:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18176:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18176:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18176:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18280:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18283:4:16",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18273:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18273:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18273:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18304:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18307:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18297:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18297:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18297:15:16"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "18138:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18366:143:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18376:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18399:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18381:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18381:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "18376:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18410:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18433:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18415:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18415:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "18410:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18457:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "18459:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18459:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18459:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18454:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18447:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18447:9:16"
                  },
                  "nodeType": "YulIf",
                  "src": "18444:35:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18489:14:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18498:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18501:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "18494:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18494:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "18489:1:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18355:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18358:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "18364:1:16",
                "type": ""
              }
            ],
            "src": "18324:185:16"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PriceConsumer_$2635_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PriceConsumer_$2635_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PriceConsumer_$2635_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_PriceConsumer_$2635__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_PriceConsumer_$2635_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_TokenBidon_$2679_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_TokenBidon_$2679_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_TokenBidon_$2679_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_TokenBidon_$2679__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_TokenBidon_$2679_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_AALToken_$1385_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AALToken_$1385_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AALToken_$1385_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AALToken_$1385__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AALToken_$1385_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount <= 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650(memPtr) {\n\n        mstore(add(memPtr, 0), \"Check the token allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not a staker or no rewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"stop spam\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "273:7096:13:-:0;;;639:1;596:44;;;;;;;;;7197:2;7179:20;;;;;;;;;;;;;;;;;;;;1683:178;;;;;;;;;;1717:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1702:12;;:29;;;;;;;;;;;;;;;;;;1770:42;1752:61;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1736:13;;:77;;;;;;;;;;;;;;;;;;1849:6;1834:22;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1818:13;;:38;;;;;;;;;;;;;;;;;;273:7096;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:126:16:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;643:7;672:5;661:16;;593:90;;;:::o;689:77::-;726:7;755:5;744:16;;689:77;;;:::o;772:60::-;800:3;821:5;814:12;;772:60;;;:::o;838:168::-;901:9;934:66;952:47;961:37;992:5;961:37;:::i;:::-;952:47;:::i;:::-;934:66;:::i;:::-;921:79;;838:168;;;:::o;1012:157::-;1112:50;1156:5;1112:50;:::i;:::-;1107:3;1100:63;1012:157;;:::o;1175:248::-;1281:4;1319:2;1308:9;1304:18;1296:26;;1332:84;1413:1;1402:9;1398:17;1389:6;1332:84;:::i;:::-;1175:248;;;;:::o;273:7096:13:-;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "273:7096:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7241:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;917:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;986:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;558:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1019:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7203:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6433:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;808:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1915:1583;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4595:843;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;526:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6194:231;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7179:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3555:847;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;596:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7241:89;7285:16;7314:11;7307:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7241:89;:::o;917:51::-;;;;;;;;;;;;;;;;;:::o;986:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;558:34::-;;;;;;;;;;;;;:::o;1019:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7203:31::-;;;;;;;;;;;;;:::o;6433:189::-;6494:4;6532:5;6540:13;;;;;;;;;;;:22;;;6563:6;342:3:0;6540:48:13;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6532:56;;6607:1;6605;:3;:8;;6612:1;6605:8;;;6610:1;6609:2;;;:::i;:::-;6605:8;6593:21;;;6433:189;;;:::o;808:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1915:1583::-;2004:14;1381:1;1371:7;:11;1363:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;2166:14:::1;2111:13;2104:31;;;2136:10;2156:4;2104:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:76;;2096:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;2227:6;:21;2234:13;2227:21;;;;;;;;;;;;;;;:33;2249:10;2227:33;;;;;;;;;;;;;;;:40;;;;;;;;;;;;2223:680;;2374:10;2387:15;2374:28;;2444:38;;;;;;;;2450:14;2444:38;;;;2466:2;2444:38;;;;2470:2;2444:38;;;;2474:1;2444:38;;;;2477:4;2444:38;;;;::::0;2408:6:::1;:21;2415:13;2408:21;;;;;;;;;;;;;;;:33;2430:10;2408:33;;;;;;;;;;;;;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2519:12;2537:10;2519:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2268:286;2223:680;;;2709:44;2728:13;2742:10;2709:18;:44::i;:::-;2664:6;:21;2671:13;2664:21;;;;;;;;;;;;;;;:33;2686:10;2664:33;;;;;;;;;;;;;;;:41;;;:89;;;;;;;:::i;:::-;;;;;;;;2810:14;2759:6;:21;2766:13;2759:21;;;;;;;;;;;;;;;:33;2781:10;2759:33;;;;;;;;;;;;;;;:47;;;:65;;;;;;;:::i;:::-;;;;;;;;2882:15;2830:6;:21;2837:13;2830:21;;;;;;;;;;;;;;;:33;2852:10;2830:33;;;;;;;;;;;;;;;:49;;:67;;;;2223:680;3016:14;2981:16;:31;2998:13;2981:31;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;3213:14;3178:16;:31;3195:13;3178:31;;;;;;;;;;;;;;;;:49;3175:97;;3235:11;3252:13;3235:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3175:97;3365:13;3358:34;;;3393:10;3412:4;3418:14;3358:75;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3445:48;3453:10;3464:14;3479:13;3445:48;;;;;;;;:::i;:::-;;;;;;;;1915:1583:::0;;;:::o;4595:843::-;4656:13;4670:10;1479:6;:14;1486:6;1479:14;;;;;;;;;;;;;;;:23;1494:7;1479:23;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:69;;;;1547:1;1513:6;:14;1520:6;1513:14;;;;;;;;;;;;;;;:23;1528:7;1513:23;;;;;;;;;;;;;;;:31;;;:35;1479:69;1471:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;4764:10:::1;4712:6;:21;4719:13;4712:21;;;;;;;;;;;;;;;:33;4734:10;4712:33;;;;;;;;;;;;;;;:49;;;4694:15;:67;;;;:::i;:::-;:80;4686:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;4851:16;4870:6;:21;4877:13;4870:21;;;;;;;;;;;;;;;:33;4892:10;4870:33;;;;;;;;;;;;;;;:41;;;4851:60;;4969:1;4919:6;:21;4926:13;4919:21;;;;;;;;;;;;;;;:33;4941:10;4919:33;;;;;;;;;;;;;;;:47;;;:51;4916:125;;;4990:45;5009:13;5024:10;4990:18;:45::i;:::-;4978:57;;;;;:::i;:::-;;;4916:125;5123:1;5079:6;:21;5086:13;5079:21;;;;;;;;;;;;;;;:33;5101:10;5079:33;;;;;;;;;;;;;;;:41;;:45;;;;5149:12;::::0;::::1;;;;;;;;:17;;;5167:10;5178:8;5149:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5377:53;5387:10;5399:8;5416:12;::::0;::::1;;;;;;;;5377:53;;;;;;;;:::i;:::-;;;;;;;;4681:757;4595:843:::0;;;:::o;526:28::-;;;;;;;;;;;;:::o;6194:231::-;6245:4;6255:14;6278:6;6274:129;6292:11;:18;;;;6290:1;:20;6274:129;;;6365:16;:32;6382:11;6394:1;6382:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6365:32;;;;;;;;;;;;;;;;6333:31;6349:11;6361:1;6349:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6333:15;:31::i;:::-;:64;;;;:::i;:::-;6323:74;;;;;:::i;:::-;;;6313:3;;;;;:::i;:::-;;;;6274:129;;;;6414:6;6407:13;;;6194:231;:::o;7179:20::-;;;;;;;;;;;;;:::o;3555:847::-;3614:13;3628:10;1479:6;:14;1486:6;1479:14;;;;;;;;;;;;;;;:23;1494:7;1479:23;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:69;;;;1547:1;1513:6;:14;1520:6;1513:14;;;;;;;;;;;;;;;:23;1528:7;1513:23;;;;;;;;;;;;;;;:31;;;:35;1479:69;1471:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;3786:2:::1;3741:6;:21;3748:13;3741:21;;;;;;;;;;;;;;;:33;3763:10;3741:33;;;;;;;;;;;;;;;:41;;;:47;;;;;;;:::i;:::-;;;;;;;;3848:24;3875:6;:21;3882:13;3875:21;;;;;;;;;;;;;;;:33;3897:10;3875:33;;;;;;;;;;;;;;;:47;;;3848:74;;4022:16;3987;:31;4004:13;3987:31;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;4181:1;4131:6;:21;4138:13;4131:21;;;;;;;;;;;;;;;:33;4153:10;4131:33;;;;;;;;;;;;;;;:47;;:51;;;;4230:5;4187:6;:21;4194:13;4187:21;;;;;;;;;;;;;;;:33;4209:10;4187:33;;;;;;;;;;;;;;;:40;;;:48;;;;;;;;;;;;;;;;;;4280:13;4273:30;;;4304:10;4315:16;4273:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4342:52;4352:10;4363:16;4380:13;4342:52;;;;;;;;:::i;:::-;;;;;;;;3639:763;3555:847:::0;;;:::o;596:44::-;;;:::o;5446:706::-;5524:4;5833:16;6025:3;6001:21;:19;:21::i;:::-;:27;;;;:::i;:::-;5960:6;:14;5967:6;5960:14;;;;;;;;;;;;;;;:23;5975:7;5960:23;;;;;;;;;;;;;;;:37;;;5934:23;5950:6;5934:15;:23::i;:::-;5891:6;:14;5898:6;5891:14;;;;;;;;;;;;;;;:23;5906:7;5891:23;;;;;;;;;;;;;;;:39;;;5873:15;:57;;;;:::i;:::-;5852:17;:79;;;;;;:::i;:::-;:105;;;;:::i;:::-;:145;;;;:::i;:::-;:178;;;;:::i;:::-;5833:197;;6103:15;6061:6;:14;6068:6;6061:14;;;;;;;;;;;;;;;:23;6076:7;6061:23;;;;;;;;;;;;;;;:39;;:57;;;;6136:8;6129:15;;;5446:706;;;;:::o;7:114:16:-;74:6;108:5;102:12;92:22;;7:114;;;:::o;127:184::-;226:11;260:6;255:3;248:19;300:4;295:3;291:14;276:29;;127:184;;;;:::o;317:132::-;384:4;407:3;399:11;;437:4;432:3;428:14;420:22;;317:132;;;:::o;455:126::-;492:7;532:42;525:5;521:54;510:65;;455:126;;;:::o;587:96::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;587:96;;;:::o;689:108::-;766:24;784:5;766:24;:::i;:::-;761:3;754:37;689:108;;:::o;803:179::-;872:10;893:46;935:3;927:6;893:46;:::i;:::-;971:4;966:3;962:14;948:28;;803:179;;;;:::o;988:113::-;1058:4;1090;1085:3;1081:14;1073:22;;988:113;;;:::o;1137:732::-;1256:3;1285:54;1333:5;1285:54;:::i;:::-;1355:86;1434:6;1429:3;1355:86;:::i;:::-;1348:93;;1465:56;1515:5;1465:56;:::i;:::-;1544:7;1575:1;1560:284;1585:6;1582:1;1579:13;1560:284;;;1661:6;1655:13;1688:63;1747:3;1732:13;1688:63;:::i;:::-;1681:70;;1774:60;1827:6;1774:60;:::i;:::-;1764:70;;1620:224;1607:1;1604;1600:9;1595:14;;1560:284;;;1564:14;1860:3;1853:10;;1261:608;;;1137:732;;;;:::o;1875:373::-;2018:4;2056:2;2045:9;2041:18;2033:26;;2105:9;2099:4;2095:20;2091:1;2080:9;2076:17;2069:47;2133:108;2236:4;2227:6;2133:108;:::i;:::-;2125:116;;1875:373;;;;:::o;2335:117::-;2444:1;2441;2434:12;2581:122;2654:24;2672:5;2654:24;:::i;:::-;2647:5;2644:35;2634:63;;2693:1;2690;2683:12;2634:63;2581:122;:::o;2709:139::-;2755:5;2793:6;2780:20;2771:29;;2809:33;2836:5;2809:33;:::i;:::-;2709:139;;;;:::o;2854:329::-;2913:6;2962:2;2950:9;2941:7;2937:23;2933:32;2930:119;;;2968:79;;:::i;:::-;2930:119;3088:1;3113:53;3158:7;3149:6;3138:9;3134:22;3113:53;:::i;:::-;3103:63;;3059:117;2854:329;;;;:::o;3189:77::-;3226:7;3255:5;3244:16;;3189:77;;;:::o;3272:118::-;3359:24;3377:5;3359:24;:::i;:::-;3354:3;3347:37;3272:118;;:::o;3396:222::-;3489:4;3527:2;3516:9;3512:18;3504:26;;3540:71;3608:1;3597:9;3593:17;3584:6;3540:71;:::i;:::-;3396:222;;;;:::o;3624:122::-;3697:24;3715:5;3697:24;:::i;:::-;3690:5;3687:35;3677:63;;3736:1;3733;3726:12;3677:63;3624:122;:::o;3752:139::-;3798:5;3836:6;3823:20;3814:29;;3852:33;3879:5;3852:33;:::i;:::-;3752:139;;;;:::o;3897:329::-;3956:6;4005:2;3993:9;3984:7;3980:23;3976:32;3973:119;;;4011:79;;:::i;:::-;3973:119;4131:1;4156:53;4201:7;4192:6;4181:9;4177:22;4156:53;:::i;:::-;4146:63;;4102:117;3897:329;;;;:::o;4232:118::-;4319:24;4337:5;4319:24;:::i;:::-;4314:3;4307:37;4232:118;;:::o;4356:222::-;4449:4;4487:2;4476:9;4472:18;4464:26;;4500:71;4568:1;4557:9;4553:17;4544:6;4500:71;:::i;:::-;4356:222;;;;:::o;4584:60::-;4612:3;4633:5;4626:12;;4584:60;;;:::o;4650:142::-;4700:9;4733:53;4751:34;4760:24;4778:5;4760:24;:::i;:::-;4751:34;:::i;:::-;4733:53;:::i;:::-;4720:66;;4650:142;;;:::o;4798:126::-;4848:9;4881:37;4912:5;4881:37;:::i;:::-;4868:50;;4798:126;;;:::o;4930:148::-;5002:9;5035:37;5066:5;5035:37;:::i;:::-;5022:50;;4930:148;;;:::o;5084:175::-;5193:59;5246:5;5193:59;:::i;:::-;5188:3;5181:72;5084:175;;:::o;5265:266::-;5380:4;5418:2;5407:9;5403:18;5395:26;;5431:93;5521:1;5510:9;5506:17;5497:6;5431:93;:::i;:::-;5265:266;;;;:::o;5537:145::-;5606:9;5639:37;5670:5;5639:37;:::i;:::-;5626:50;;5537:145;;;:::o;5688:169::-;5794:56;5844:5;5794:56;:::i;:::-;5789:3;5782:69;5688:169;;:::o;5863:260::-;5975:4;6013:2;6002:9;5998:18;5990:26;;6026:90;6113:1;6102:9;6098:17;6089:6;6026:90;:::i;:::-;5863:260;;;;:::o;6129:474::-;6197:6;6205;6254:2;6242:9;6233:7;6229:23;6225:32;6222:119;;;6260:79;;:::i;:::-;6222:119;6380:1;6405:53;6450:7;6441:6;6430:9;6426:22;6405:53;:::i;:::-;6395:63;;6351:117;6507:2;6533:53;6578:7;6569:6;6558:9;6554:22;6533:53;:::i;:::-;6523:63;;6478:118;6129:474;;;;;:::o;6609:90::-;6643:7;6686:5;6679:13;6672:21;6661:32;;6609:90;;;:::o;6705:109::-;6786:21;6801:5;6786:21;:::i;:::-;6781:3;6774:34;6705:109;;:::o;6820:652::-;7019:4;7057:3;7046:9;7042:19;7034:27;;7071:71;7139:1;7128:9;7124:17;7115:6;7071:71;:::i;:::-;7152:72;7220:2;7209:9;7205:18;7196:6;7152:72;:::i;:::-;7234;7302:2;7291:9;7287:18;7278:6;7234:72;:::i;:::-;7316;7384:2;7373:9;7369:18;7360:6;7316:72;:::i;:::-;7398:67;7460:3;7449:9;7445:19;7436:6;7398:67;:::i;:::-;6820:652;;;;;;;;:::o;7478:474::-;7546:6;7554;7603:2;7591:9;7582:7;7578:23;7574:32;7571:119;;;7609:79;;:::i;:::-;7571:119;7729:1;7754:53;7799:7;7790:6;7779:9;7775:22;7754:53;:::i;:::-;7744:63;;7700:117;7856:2;7882:53;7927:7;7918:6;7907:9;7903:22;7882:53;:::i;:::-;7872:63;;7827:118;7478:474;;;;;:::o;7958:143::-;8025:9;8058:37;8089:5;8058:37;:::i;:::-;8045:50;;7958:143;;;:::o;8107:165::-;8211:54;8259:5;8211:54;:::i;:::-;8206:3;8199:67;8107:165;;:::o;8278:256::-;8388:4;8426:2;8415:9;8411:18;8403:26;;8439:88;8524:1;8513:9;8509:17;8500:6;8439:88;:::i;:::-;8278:256;;;;:::o;8540:86::-;8575:7;8615:4;8608:5;8604:16;8593:27;;8540:86;;;:::o;8632:112::-;8715:22;8731:5;8715:22;:::i;:::-;8710:3;8703:35;8632:112;;:::o;8750:214::-;8839:4;8877:2;8866:9;8862:18;8854:26;;8890:67;8954:1;8943:9;8939:17;8930:6;8890:67;:::i;:::-;8750:214;;;;:::o;8970:332::-;9091:4;9129:2;9118:9;9114:18;9106:26;;9142:71;9210:1;9199:9;9195:17;9186:6;9142:71;:::i;:::-;9223:72;9291:2;9280:9;9276:18;9267:6;9223:72;:::i;:::-;8970:332;;;;;:::o;9308:76::-;9344:7;9373:5;9362:16;;9308:76;;;:::o;9390:120::-;9462:23;9479:5;9462:23;:::i;:::-;9455:5;9452:34;9442:62;;9500:1;9497;9490:12;9442:62;9390:120;:::o;9516:141::-;9572:5;9603:6;9597:13;9588:22;;9619:32;9645:5;9619:32;:::i;:::-;9516:141;;;;:::o;9663:349::-;9732:6;9781:2;9769:9;9760:7;9756:23;9752:32;9749:119;;;9787:79;;:::i;:::-;9749:119;9907:1;9932:63;9987:7;9978:6;9967:9;9963:22;9932:63;:::i;:::-;9922:73;;9878:127;9663:349;;;;:::o;10018:180::-;10066:77;10063:1;10056:88;10163:4;10160:1;10153:15;10187:4;10184:1;10177:15;10204:228;10239:3;10262:23;10279:5;10262:23;:::i;:::-;10253:32;;10307:66;10300:5;10297:77;10294:103;;;10377:18;;:::i;:::-;10294:103;10420:5;10417:1;10413:13;10406:20;;10204:228;;;:::o;10438:169::-;10522:11;10556:6;10551:3;10544:19;10596:4;10591:3;10587:14;10572:29;;10438:169;;;;:::o;10613:161::-;10753:13;10749:1;10741:6;10737:14;10730:37;10613:161;:::o;10780:366::-;10922:3;10943:67;11007:2;11002:3;10943:67;:::i;:::-;10936:74;;11019:93;11108:3;11019:93;:::i;:::-;11137:2;11132:3;11128:12;11121:19;;10780:366;;;:::o;11152:419::-;11318:4;11356:2;11345:9;11341:18;11333:26;;11405:9;11399:4;11395:20;11391:1;11380:9;11376:17;11369:47;11433:131;11559:4;11433:131;:::i;:::-;11425:139;;11152:419;;;:::o;11577:143::-;11634:5;11665:6;11659:13;11650:22;;11681:33;11708:5;11681:33;:::i;:::-;11577:143;;;;:::o;11726:351::-;11796:6;11845:2;11833:9;11824:7;11820:23;11816:32;11813:119;;;11851:79;;:::i;:::-;11813:119;11971:1;11996:64;12052:7;12043:6;12032:9;12028:22;11996:64;:::i;:::-;11986:74;;11942:128;11726:351;;;;:::o;12083:175::-;12223:27;12219:1;12211:6;12207:14;12200:51;12083:175;:::o;12264:366::-;12406:3;12427:67;12491:2;12486:3;12427:67;:::i;:::-;12420:74;;12503:93;12592:3;12503:93;:::i;:::-;12621:2;12616:3;12612:12;12605:19;;12264:366;;;:::o;12636:419::-;12802:4;12840:2;12829:9;12825:18;12817:26;;12889:9;12883:4;12879:20;12875:1;12864:9;12860:17;12853:47;12917:131;13043:4;12917:131;:::i;:::-;12909:139;;12636:419;;;:::o;13061:305::-;13101:3;13120:20;13138:1;13120:20;:::i;:::-;13115:25;;13154:20;13172:1;13154:20;:::i;:::-;13149:25;;13308:1;13240:66;13236:74;13233:1;13230:81;13227:107;;;13314:18;;:::i;:::-;13227:107;13358:1;13355;13351:9;13344:16;;13061:305;;;;:::o;13372:442::-;13521:4;13559:2;13548:9;13544:18;13536:26;;13572:71;13640:1;13629:9;13625:17;13616:6;13572:71;:::i;:::-;13653:72;13721:2;13710:9;13706:18;13697:6;13653:72;:::i;:::-;13735;13803:2;13792:9;13788:18;13779:6;13735:72;:::i;:::-;13372:442;;;;;;:::o;13820:116::-;13890:21;13905:5;13890:21;:::i;:::-;13883:5;13880:32;13870:60;;13926:1;13923;13916:12;13870:60;13820:116;:::o;13942:137::-;13996:5;14027:6;14021:13;14012:22;;14043:30;14067:5;14043:30;:::i;:::-;13942:137;;;;:::o;14085:345::-;14152:6;14201:2;14189:9;14180:7;14176:23;14172:32;14169:119;;;14207:79;;:::i;:::-;14169:119;14327:1;14352:61;14405:7;14396:6;14385:9;14381:22;14352:61;:::i;:::-;14342:71;;14298:125;14085:345;;;;:::o;14436:442::-;14585:4;14623:2;14612:9;14608:18;14600:26;;14636:71;14704:1;14693:9;14689:17;14680:6;14636:71;:::i;:::-;14717:72;14785:2;14774:9;14770:18;14761:6;14717:72;:::i;:::-;14799;14867:2;14856:9;14852:18;14843:6;14799:72;:::i;:::-;14436:442;;;;;;:::o;14884:176::-;15024:28;15020:1;15012:6;15008:14;15001:52;14884:176;:::o;15066:366::-;15208:3;15229:67;15293:2;15288:3;15229:67;:::i;:::-;15222:74;;15305:93;15394:3;15305:93;:::i;:::-;15423:2;15418:3;15414:12;15407:19;;15066:366;;;:::o;15438:419::-;15604:4;15642:2;15631:9;15627:18;15619:26;;15691:9;15685:4;15681:20;15677:1;15666:9;15662:17;15655:47;15719:131;15845:4;15719:131;:::i;:::-;15711:139;;15438:419;;;:::o;15863:191::-;15903:4;15923:20;15941:1;15923:20;:::i;:::-;15918:25;;15957:20;15975:1;15957:20;:::i;:::-;15952:25;;15996:1;15993;15990:8;15987:34;;;16001:18;;:::i;:::-;15987:34;16046:1;16043;16039:9;16031:17;;15863:191;;;;:::o;16060:159::-;16200:11;16196:1;16188:6;16184:14;16177:35;16060:159;:::o;16225:365::-;16367:3;16388:66;16452:1;16447:3;16388:66;:::i;:::-;16381:73;;16463:93;16552:3;16463:93;:::i;:::-;16581:2;16576:3;16572:12;16565:19;;16225:365;;;:::o;16596:419::-;16762:4;16800:2;16789:9;16785:18;16777:26;;16849:9;16843:4;16839:20;16835:1;16824:9;16820:17;16813:47;16877:131;17003:4;16877:131;:::i;:::-;16869:139;;16596:419;;;:::o;17021:332::-;17142:4;17180:2;17169:9;17165:18;17157:26;;17193:71;17261:1;17250:9;17246:17;17237:6;17193:71;:::i;:::-;17274:72;17342:2;17331:9;17327:18;17318:6;17274:72;:::i;:::-;17021:332;;;;;:::o;17359:180::-;17407:77;17404:1;17397:88;17504:4;17501:1;17494:15;17528:4;17525:1;17518:15;17545:348;17585:7;17608:20;17626:1;17608:20;:::i;:::-;17603:25;;17642:20;17660:1;17642:20;:::i;:::-;17637:25;;17830:1;17762:66;17758:74;17755:1;17752:81;17747:1;17740:9;17733:17;17729:105;17726:131;;;17837:18;;:::i;:::-;17726:131;17885:1;17882;17878:9;17867:20;;17545:348;;;;:::o;17899:233::-;17938:3;17961:24;17979:5;17961:24;:::i;:::-;17952:33;;18007:66;18000:5;17997:77;17994:103;;;18077:18;;:::i;:::-;17994:103;18124:1;18117:5;18113:13;18106:20;;17899:233;;;:::o;18138:180::-;18186:77;18183:1;18176:88;18283:4;18280:1;18273:15;18307:4;18304:1;18297:15;18324:185;18364:1;18381:20;18399:1;18381:20;:::i;:::-;18376:25;;18415:20;18433:1;18415:20;:::i;:::-;18410:25;;18454:1;18444:35;;18459:18;;:::i;:::-;18444:35;18501:1;18498;18494:9;18489:14;;18324:185;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.11;\r\n\r\nimport \"./AALToken.sol\";\r\nimport \"./TokenBidon.sol\";\r\nimport \"./PriceConsumer.sol\";\r\n\r\n\r\n\t//mapping(address => Stake) public stakes;\r\n\t//IERC20 stakingToken;\r\n    \r\n//Hypothese : stacking of WETH to get AALToken\r\ncontract myStackingDappOld {\r\n\t\r\n    //Stake struct with token staked\r\n\tstruct Stake {\r\n\t\tuint256 stakingAmount;\r\n\t\tuint256 startStakingTimestamp;\r\n\t\tuint256 updateTimestamp;\r\n\t\tuint256 rewards;\r\n\t\tbool staked;\r\n\t}\r\n\r\n    //Token rewarded for staking\r\n\tAALToken public rewardsToken;\r\n\tPriceConsumer public priceConsumer;\r\n\tuint8 public immutable DAILY_REWARD_RATE = 2;\r\n\t\r\n\t\r\n\r\n\r\n    //Mapping of : Stake per User per Token staked\r\n\t// Token A => User A => Stake 1\r\n\t// Token A => User B => Stake 2\r\n\t// Token B => User A => Stake 3\r\n\tmapping(address => mapping(address => Stake)) public stakes;\r\n\r\n\t//TotalSupplyOfToken per token address\r\n    mapping(address => uint256) public totalTokenSupply;\r\n\r\n\t//Helpers\r\n\taddress[] public listOfStaker;\r\n\taddress[] public listOfToken;\r\n\r\n\tevent Staking(address stakerAddress, uint256 amountToStake, address stakingToken);\r\n    event Unstaking(address stakerAddress, uint256 amountToUnstake, address stakingToken);\r\n\tevent Rewarding(address stakerAddress, uint256 rewards, address stakingToken);\r\n\r\n\tmodifier amountStrictPositiv(uint256 _amount){\r\n\t\trequire(_amount > 0,\"Amount <= 0\");\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier stakerExist(address _token, address _sender){\r\n\t\trequire(stakes[_token][_sender].staked || stakes[_token][_sender].rewards > 0,\"Not a staker or no rewards\");\r\n\t\t_;\r\n\t}\r\n\r\n    //Launch of this contract with definition of supply of AALToken, maybe to change...\r\n\tconstructor() {\r\n\t\trewardsToken = new AALToken();\r\n\t\tpriceConsumer = new PriceConsumer(0xAa7F6f7f507457a1EE157fE97F6c7DB2BEec5cD0);\r\n\t\tstackingToken = new TokenBidon(100000);\r\n\t}\r\n\r\n\r\n    /* ============= STAKE ============= */\r\n\r\n\tfunction stake(address _stakingToken, uint256 _amountToStake) public amountStrictPositiv(_amountToStake) {\r\n\t\t\r\n\t\t//Check allowance of the token IERC20 the user will stake\r\n        require(IERC20(_stakingToken).allowance(msg.sender, address(this)) >= _amountToStake, \"Check the token allowance\");\r\n\r\n        if(!stakes[_stakingToken][msg.sender].staked){\r\n\t\t\t//If this stake does not exist : Create the Stake struc in the Stake per User per Token mapping\r\n\t\t\tuint256 ts = block.timestamp;\r\n\t\t\tstakes[_stakingToken][msg.sender] = Stake(_amountToStake, ts, ts, 0, true);\r\n\t\t\t//And push that new staker\r\n\t\t\tlistOfStaker.push(msg.sender);\r\n\t\t} else {\r\n\t\t\t//If this stake already exists : Compute previous reward, update the timestamp and the amount\r\n\t\t\tstakes[_stakingToken][msg.sender].rewards += calcRewardPerStake(_stakingToken,msg.sender);\r\n\t\t\tstakes[_stakingToken][msg.sender].stakingAmount += _amountToStake;\r\n\t\t\tstakes[_stakingToken][msg.sender].updateTimestamp = block.timestamp;\r\n\t\t}\r\n\t\t\r\n        //The total supply of that token increases of _amountToStake\r\n\t\ttotalTokenSupply[_stakingToken] += _amountToStake;\r\n\r\n\t\t//If the totalSupply of that token is sup of the amount, that means the token already exists, so we don't need to push it in the array\r\n\t\tif(totalTokenSupply[_stakingToken] <= _amountToStake) {\r\n\t\t\tlistOfToken.push(_stakingToken);\r\n\t\t}\r\n\r\n        //Transfer from user's wallet to this contract of _amountToStake\r\n        IERC20(_stakingToken).transferFrom(msg.sender,address(this),_amountToStake);\r\n\r\n\t\temit Staking(msg.sender,_amountToStake,_stakingToken);\r\n\t}\r\n\r\n\r\n\t/* ============= UNSTAKE ============= */\r\n    \r\n\tfunction unstake(address _stakingToken) public stakerExist(_stakingToken,msg.sender){\r\n\t\t//Computes reward first (in calc reward the updateTimestamp is updated so we dont do it here)\r\n\t\tstakes[_stakingToken][msg.sender].rewards += 10;\r\n\t\t//calcRewardPerStake(_stakingToken,msg.sender);\r\n\t\t\r\n\t\tuint256 _amountToUnstake = stakes[_stakingToken][msg.sender].stakingAmount;\r\n\t\t//Update of the total supply of that _stakingToken\r\n        totalTokenSupply[_stakingToken] -= _amountToUnstake;\r\n\t\r\n\t\t//Update the struct of the Staker - Stake(0, tsStart, tsUpdated, rewards, false);\r\n\t\tstakes[_stakingToken][msg.sender].stakingAmount = 0;\r\n\t\tstakes[_stakingToken][msg.sender].staked = false;\r\n\r\n\t\t//Transfer the staked token\r\n\t\tIERC20(_stakingToken).transfer(msg.sender,_amountToUnstake);\r\n\t\temit Unstaking(msg.sender,_amountToUnstake,_stakingToken);\r\n    }\r\n\r\n\r\n\t/* ============= REWARDS ============= */\r\n\r\n\t/**\r\n\t * Computes rewards and transfers them msg.sender\r\n\t * _token : staked token\r\n\t * require max every 30 sec can be called\r\n\t*/\r\n\t\r\n    function getReward(address _stakingToken) public stakerExist(_stakingToken,msg.sender){\r\n\t\trequire(block.timestamp - stakes[_stakingToken][msg.sender].updateTimestamp > 30 seconds,\"stop spam\");\r\n\t\t//Compute rewards = previous rewards calc + new rewards\r\n\t\tuint256 _rewards = stakes[_stakingToken][msg.sender].rewards;\r\n\t\tif(stakes[_stakingToken][msg.sender].stakingAmount > 0) {\r\n\t\t\t_rewards += calcRewardPerStake(_stakingToken, msg.sender);\r\n\t\t}\r\n\t\t\r\n\t\t//Re entrancy rewards = 0;\r\n\t\tstakes[_stakingToken][msg.sender].rewards = 0;\r\n\r\n\t\t//Mint rewards\r\n\t\trewardsToken.mint(msg.sender,_rewards);\r\n\r\n\t\t//Transfer rewards\r\n\t\t//require(_rewards > 0 && rewardsToken.totalSupply() > _rewards,\"Rewards = 0 or totalSupply reached!\");\r\n\t\t//rewardsToken.transfer(msg.sender,_rewards);\r\n\t\temit Rewarding(msg.sender, _rewards,address(rewardsToken));\r\n    }\r\n\r\n    function calcRewardPerStake(address _token, address _sender) internal returns(uint) {\r\n\t\t//Get the rewards : rewardRate * staking period * share of the pool at updateTime\r\n\t\t//uint256 _rewards = DAILY_REWARD_RATE * (block.timestamp - stakes[_token][_sender].updateTimestamp) * getPriceOfToken(_token) * stakes[_token][_sender].stakingAmount / (getPriceOfAllSupply() * 100 * 1 days );\r\n\t\tuint256 _rewards = DAILY_REWARD_RATE * (block.timestamp - stakes[_token][_sender].updateTimestamp) * getPriceOfToken(_token) * stakes[_token][_sender].stakingAmount / (getPriceOfAllSupply() * 100 );\r\n\t\t//Update the timestamp\r\n\t\tstakes[_token][_sender].updateTimestamp = block.timestamp;\r\n        return _rewards;\r\n    }\r\n\t\r\n\t//TODO pb of the array to correct\r\n\tfunction getPriceOfAllSupply() view public returns(uint){\r\n\t\tuint256 amount;\r\n\t\tfor(uint i = 0; i<listOfToken.length ; i++){\r\n\t\t\tamount += getPriceOfToken(listOfToken[i])*totalTokenSupply[listOfToken[i]];\r\n\t\t}\r\n\t\treturn amount;\r\n\t}\r\n\r\n    function getPriceOfToken(address _token) view public returns(uint){\r\n        //Oracle call here\r\n\t\tint x = priceConsumer.getPrice(_token,Denominations.USD);\r\n\t\treturn uint(x<0?-x:x);\r\n    }\r\n\r\n\t/*function getRewardRate() view public returns(uint){\r\n\t\tif(rewardsToken.totalSupply() > rewardsToken.initialSupply() * 80/100) {\r\n\t\t\treturn 8;\r\n\t\t} else if(rewardsToken.totalSupply() > rewardsToken.initialSupply() * 60/100) {\r\n\t\t\treturn 6;\r\n\t\t} else if(rewardsToken.totalSupply() > rewardsToken.initialSupply() * 40/100) {\r\n\t\t\treturn 4;\r\n\t\t} else if(rewardsToken.totalSupply() > rewardsToken.initialSupply() * 20/100) {\r\n\t\t\treturn 2;\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}*/\r\n\t\r\n\t/* ============= HELPERS ============= */\r\n\t\r\n\t//Testing field to delete\r\n\tuint8 public wf = 18;\r\n\tTokenBidon public stackingToken;\r\n\t\r\n\tfunction getTokenList() public view returns(address[] memory){\r\n\t\treturn listOfToken;\r\n\t}\r\n\t\r\n\t//Plus checked the constructor\r\n}",
  "sourcePath": "D:\\Data\\Documents\\TruffleProjects\\MyStackingDapp\\back\\contracts\\MyStackingDappOld.sol",
  "ast": {
    "absolutePath": "project:/contracts/MyStackingDappOld.sol",
    "exportedSymbols": {
      "AALToken": [
        1385
      ],
      "AggregatorInterface": [
        164
      ],
      "AggregatorV2V3Interface": [
        173
      ],
      "AggregatorV3Interface": [
        219
      ],
      "Context": [
        1348
      ],
      "Denominations": [
        116
      ],
      "ERC20": [
        1223
      ],
      "FeedRegistryInterface": [
        530
      ],
      "IERC20": [
        1301
      ],
      "IERC20Metadata": [
        1326
      ],
      "Ownable": [
        635
      ],
      "PriceConsumer": [
        2635
      ],
      "TokenBidon": [
        2679
      ],
      "myStackingDappOld": [
        2574
      ]
    },
    "id": 2575,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2009,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "absolutePath": "project:/contracts/AALToken.sol",
        "file": "./AALToken.sol",
        "id": 2010,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2575,
        "sourceUnit": 1386,
        "src": "60:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TokenBidon.sol",
        "file": "./TokenBidon.sol",
        "id": 2011,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2575,
        "sourceUnit": 2680,
        "src": "86:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PriceConsumer.sol",
        "file": "./PriceConsumer.sol",
        "id": 2012,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2575,
        "sourceUnit": 2636,
        "src": "114:29:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "myStackingDappOld",
        "contractDependencies": [
          1385,
          2635,
          2679
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2574,
        "linearizedBaseContracts": [
          2574
        ],
        "name": "myStackingDappOld",
        "nameLocation": "282:17:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "myStackingDappOld.Stake",
            "id": 2023,
            "members": [
              {
                "constant": false,
                "id": 2014,
                "mutability": "mutable",
                "name": "stakingAmount",
                "nameLocation": "371:13:13",
                "nodeType": "VariableDeclaration",
                "scope": 2023,
                "src": "363:21:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2013,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "363:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2016,
                "mutability": "mutable",
                "name": "startStakingTimestamp",
                "nameLocation": "397:21:13",
                "nodeType": "VariableDeclaration",
                "scope": 2023,
                "src": "389:29:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2015,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "389:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2018,
                "mutability": "mutable",
                "name": "updateTimestamp",
                "nameLocation": "431:15:13",
                "nodeType": "VariableDeclaration",
                "scope": 2023,
                "src": "423:23:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2017,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "423:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2020,
                "mutability": "mutable",
                "name": "rewards",
                "nameLocation": "459:7:13",
                "nodeType": "VariableDeclaration",
                "scope": 2023,
                "src": "451:15:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2019,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "451:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2022,
                "mutability": "mutable",
                "name": "staked",
                "nameLocation": "476:6:13",
                "nodeType": "VariableDeclaration",
                "scope": 2023,
                "src": "471:11:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2021,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "471:4:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "352:5:13",
            "nodeType": "StructDefinition",
            "scope": 2574,
            "src": "345:142:13",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d1af0c7d",
            "id": 2026,
            "mutability": "mutable",
            "name": "rewardsToken",
            "nameLocation": "542:12:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "526:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AALToken_$1385",
              "typeString": "contract AALToken"
            },
            "typeName": {
              "id": 2025,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2024,
                "name": "AALToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1385,
                "src": "526:8:13"
              },
              "referencedDeclaration": 1385,
              "src": "526:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AALToken_$1385",
                "typeString": "contract AALToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "461a758c",
            "id": 2029,
            "mutability": "mutable",
            "name": "priceConsumer",
            "nameLocation": "579:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "558:34:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceConsumer_$2635",
              "typeString": "contract PriceConsumer"
            },
            "typeName": {
              "id": 2028,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2027,
                "name": "PriceConsumer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "558:13:13"
              },
              "referencedDeclaration": 2635,
              "src": "558:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                "typeString": "contract PriceConsumer"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9a88fc4",
            "id": 2032,
            "mutability": "immutable",
            "name": "DAILY_REWARD_RATE",
            "nameLocation": "619:17:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "596:44:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2030,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "596:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 2031,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "639:1:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a4e47b66",
            "id": 2039,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "861:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "808:59:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake))"
            },
            "typeName": {
              "id": 2038,
              "keyType": {
                "id": 2033,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "816:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "808:45:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake))"
              },
              "valueType": {
                "id": 2037,
                "keyType": {
                  "id": 2034,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "835:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "827:25:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                  "typeString": "mapping(address => struct myStackingDappOld.Stake)"
                },
                "valueType": {
                  "id": 2036,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2035,
                    "name": "Stake",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2023,
                    "src": "846:5:13"
                  },
                  "referencedDeclaration": 2023,
                  "src": "846:5:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$2023_storage_ptr",
                    "typeString": "struct myStackingDappOld.Stake"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2c2332fe",
            "id": 2043,
            "mutability": "mutable",
            "name": "totalTokenSupply",
            "nameLocation": "952:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "917:51:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2042,
              "keyType": {
                "id": 2040,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "925:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "917:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2041,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "936:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "369ba1ac",
            "id": 2046,
            "mutability": "mutable",
            "name": "listOfStaker",
            "nameLocation": "1003:12:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "986:29:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2044,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "986:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2045,
              "nodeType": "ArrayTypeName",
              "src": "986:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6a36c343",
            "id": 2049,
            "mutability": "mutable",
            "name": "listOfToken",
            "nameLocation": "1036:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "1019:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2047,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1019:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2048,
              "nodeType": "ArrayTypeName",
              "src": "1019:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2057,
            "name": "Staking",
            "nameLocation": "1059:7:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2051,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakerAddress",
                  "nameLocation": "1075:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "1067:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2053,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountToStake",
                  "nameLocation": "1098:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "1090:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2055,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "1121:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "1113:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1066:68:13"
            },
            "src": "1053:82:13"
          },
          {
            "anonymous": false,
            "id": 2065,
            "name": "Unstaking",
            "nameLocation": "1147:9:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2059,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakerAddress",
                  "nameLocation": "1165:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2065,
                  "src": "1157:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2061,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountToUnstake",
                  "nameLocation": "1188:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2065,
                  "src": "1180:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2063,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "1213:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2065,
                  "src": "1205:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1156:70:13"
            },
            "src": "1141:86:13"
          },
          {
            "anonymous": false,
            "id": 2073,
            "name": "Rewarding",
            "nameLocation": "1236:9:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2067,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakerAddress",
                  "nameLocation": "1254:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "1246:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2069,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewards",
                  "nameLocation": "1277:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "1269:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2071,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "1294:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "1286:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:62:13"
            },
            "src": "1230:78:13"
          },
          {
            "body": {
              "id": 2085,
              "nodeType": "Block",
              "src": "1358:50:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2078,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2075,
                          "src": "1371:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1381:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1371:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74203c3d2030",
                        "id": 2081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1383:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec",
                          "typeString": "literal_string \"Amount <= 0\""
                        },
                        "value": "Amount <= 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec",
                          "typeString": "literal_string \"Amount <= 0\""
                        }
                      ],
                      "id": 2077,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1363:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1363:34:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2083,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:34:13"
                },
                {
                  "id": 2084,
                  "nodeType": "PlaceholderStatement",
                  "src": "1402:1:13"
                }
              ]
            },
            "id": 2086,
            "name": "amountStrictPositiv",
            "nameLocation": "1322:19:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2075,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1350:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2086,
                  "src": "1342:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1341:17:13"
            },
            "src": "1313:95:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2112,
              "nodeType": "Block",
              "src": "1466:123:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2093,
                                "name": "stakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2039,
                                "src": "1479:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                }
                              },
                              "id": 2095,
                              "indexExpression": {
                                "id": 2094,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2088,
                                "src": "1486:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1479:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                              }
                            },
                            "id": 2097,
                            "indexExpression": {
                              "id": 2096,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2090,
                              "src": "1494:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1479:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$2023_storage",
                              "typeString": "struct myStackingDappOld.Stake storage ref"
                            }
                          },
                          "id": 2098,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2022,
                          "src": "1479:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2099,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "1513:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                  }
                                },
                                "id": 2101,
                                "indexExpression": {
                                  "id": 2100,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2088,
                                  "src": "1520:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1513:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                  "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                }
                              },
                              "id": 2103,
                              "indexExpression": {
                                "id": 2102,
                                "name": "_sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2090,
                                "src": "1528:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1513:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                "typeString": "struct myStackingDappOld.Stake storage ref"
                              }
                            },
                            "id": 2104,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2020,
                            "src": "1513:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1547:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1513:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1479:69:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061207374616b6572206f72206e6f2072657761726473",
                        "id": 2108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1549:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92",
                          "typeString": "literal_string \"Not a staker or no rewards\""
                        },
                        "value": "Not a staker or no rewards"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92",
                          "typeString": "literal_string \"Not a staker or no rewards\""
                        }
                      ],
                      "id": 2092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1471:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:107:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2110,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:107:13"
                },
                {
                  "id": 2111,
                  "nodeType": "PlaceholderStatement",
                  "src": "1583:1:13"
                }
              ]
            },
            "id": 2113,
            "name": "stakerExist",
            "nameLocation": "1422:11:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1442:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2113,
                  "src": "1434:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2090,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "1458:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2113,
                  "src": "1450:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1433:33:13"
            },
            "src": "1413:176:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2139,
              "nodeType": "Block",
              "src": "1697:164:13",
              "statements": [
                {
                  "expression": {
                    "id": 2121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2116,
                      "name": "rewardsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2026,
                      "src": "1702:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AALToken_$1385",
                        "typeString": "contract AALToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1717:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AALToken_$1385_$",
                          "typeString": "function () returns (contract AALToken)"
                        },
                        "typeName": {
                          "id": 2118,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2117,
                            "name": "AALToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1385,
                            "src": "1721:8:13"
                          },
                          "referencedDeclaration": 1385,
                          "src": "1721:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AALToken_$1385",
                            "typeString": "contract AALToken"
                          }
                        }
                      },
                      "id": 2120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1717:14:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AALToken_$1385",
                        "typeString": "contract AALToken"
                      }
                    },
                    "src": "1702:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AALToken_$1385",
                      "typeString": "contract AALToken"
                    }
                  },
                  "id": 2122,
                  "nodeType": "ExpressionStatement",
                  "src": "1702:29:13"
                },
                {
                  "expression": {
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2123,
                      "name": "priceConsumer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2029,
                      "src": "1736:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                        "typeString": "contract PriceConsumer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307841613746366637663530373435376131454531353766453937463663374442324245656335634430",
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1770:42:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xAa7F6f7f507457a1EE157fE97F6c7DB2BEec5cD0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1752:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_PriceConsumer_$2635_$",
                          "typeString": "function (address) returns (contract PriceConsumer)"
                        },
                        "typeName": {
                          "id": 2125,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2124,
                            "name": "PriceConsumer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2635,
                            "src": "1756:13:13"
                          },
                          "referencedDeclaration": 2635,
                          "src": "1756:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                            "typeString": "contract PriceConsumer"
                          }
                        }
                      },
                      "id": 2128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1752:61:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                        "typeString": "contract PriceConsumer"
                      }
                    },
                    "src": "1736:77:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                      "typeString": "contract PriceConsumer"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:77:13"
                },
                {
                  "expression": {
                    "id": 2137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2131,
                      "name": "stackingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2564,
                      "src": "1818:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenBidon_$2679",
                        "typeString": "contract TokenBidon"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "313030303030",
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1849:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          }
                        ],
                        "id": 2134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1834:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_TokenBidon_$2679_$",
                          "typeString": "function (uint256) returns (contract TokenBidon)"
                        },
                        "typeName": {
                          "id": 2133,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2132,
                            "name": "TokenBidon",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2679,
                            "src": "1838:10:13"
                          },
                          "referencedDeclaration": 2679,
                          "src": "1838:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenBidon_$2679",
                            "typeString": "contract TokenBidon"
                          }
                        }
                      },
                      "id": 2136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1834:22:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenBidon_$2679",
                        "typeString": "contract TokenBidon"
                      }
                    },
                    "src": "1818:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenBidon_$2679",
                      "typeString": "contract TokenBidon"
                    }
                  },
                  "id": 2138,
                  "nodeType": "ExpressionStatement",
                  "src": "1818:38:13"
                }
              ]
            },
            "id": 2140,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1694:2:13"
            },
            "returnParameters": {
              "id": 2115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1697:0:13"
            },
            "scope": 2574,
            "src": "1683:178:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2279,
              "nodeType": "Block",
              "src": "2020:1478:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2155,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2136:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2136:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2159,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2156:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_myStackingDappOld_$2574",
                                    "typeString": "contract myStackingDappOld"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_myStackingDappOld_$2574",
                                    "typeString": "contract myStackingDappOld"
                                  }
                                ],
                                "id": 2158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2148:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2157,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2148:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2148:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2152,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2142,
                                  "src": "2111:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2151,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1301,
                                "src": "2104:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1301_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2104:21:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1301",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1260,
                            "src": "2104:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:58:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2162,
                          "name": "_amountToStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2144,
                          "src": "2166:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2104:76:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436865636b2074686520746f6b656e20616c6c6f77616e6365",
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2182:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                          "typeString": "literal_string \"Check the token allowance\""
                        },
                        "value": "Check the token allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                          "typeString": "literal_string \"Check the token allowance\""
                        }
                      ],
                      "id": 2150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2096:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:114:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:114:13"
                },
                {
                  "condition": {
                    "id": 2174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2226:41:13",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2167,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "2227:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2169,
                          "indexExpression": {
                            "id": 2168,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2142,
                            "src": "2234:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2227:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2172,
                        "indexExpression": {
                          "expression": {
                            "id": 2170,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2249:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2249:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2227:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2022,
                      "src": "2227:40:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2238,
                    "nodeType": "Block",
                    "src": "2560:343:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2203,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "2664:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                  }
                                },
                                "id": 2207,
                                "indexExpression": {
                                  "id": 2204,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2142,
                                  "src": "2671:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2664:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                  "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                }
                              },
                              "id": 2208,
                              "indexExpression": {
                                "expression": {
                                  "id": 2205,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2686:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2686:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2664:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                "typeString": "struct myStackingDappOld.Stake storage ref"
                              }
                            },
                            "id": 2209,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2020,
                            "src": "2664:41:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2211,
                                "name": "_stakingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2142,
                                "src": "2728:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2212,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2742:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2742:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2210,
                              "name": "calcRewardPerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2492,
                              "src": "2709:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) returns (uint256)"
                              }
                            },
                            "id": 2214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2709:44:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2664:89:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2216,
                        "nodeType": "ExpressionStatement",
                        "src": "2664:89:13"
                      },
                      {
                        "expression": {
                          "id": 2225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2217,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "2759:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                  }
                                },
                                "id": 2221,
                                "indexExpression": {
                                  "id": 2218,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2142,
                                  "src": "2766:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2759:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                  "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                }
                              },
                              "id": 2222,
                              "indexExpression": {
                                "expression": {
                                  "id": 2219,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2781:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2781:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2759:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                "typeString": "struct myStackingDappOld.Stake storage ref"
                              }
                            },
                            "id": 2223,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stakingAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2014,
                            "src": "2759:47:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2224,
                            "name": "_amountToStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "2810:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2759:65:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2226,
                        "nodeType": "ExpressionStatement",
                        "src": "2759:65:13"
                      },
                      {
                        "expression": {
                          "id": 2236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2227,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "2830:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                  }
                                },
                                "id": 2231,
                                "indexExpression": {
                                  "id": 2228,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2142,
                                  "src": "2837:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2830:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                  "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                }
                              },
                              "id": 2232,
                              "indexExpression": {
                                "expression": {
                                  "id": 2229,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2852:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2852:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2830:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                "typeString": "struct myStackingDappOld.Stake storage ref"
                              }
                            },
                            "id": 2233,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "updateTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2018,
                            "src": "2830:49:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2234,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2882:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2882:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2830:67:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2237,
                        "nodeType": "ExpressionStatement",
                        "src": "2830:67:13"
                      }
                    ]
                  },
                  "id": 2239,
                  "nodeType": "IfStatement",
                  "src": "2223:680:13",
                  "trueBody": {
                    "id": 2202,
                    "nodeType": "Block",
                    "src": "2268:286:13",
                    "statements": [
                      {
                        "assignments": [
                          2176
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2176,
                            "mutability": "mutable",
                            "name": "ts",
                            "nameLocation": "2382:2:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2202,
                            "src": "2374:10:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2175,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2374:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2179,
                        "initialValue": {
                          "expression": {
                            "id": 2177,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2387:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2387:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2374:28:13"
                      },
                      {
                        "expression": {
                          "id": 2193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2180,
                                "name": "stakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2039,
                                "src": "2408:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                }
                              },
                              "id": 2184,
                              "indexExpression": {
                                "id": 2181,
                                "name": "_stakingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2142,
                                "src": "2415:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2408:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                              }
                            },
                            "id": 2185,
                            "indexExpression": {
                              "expression": {
                                "id": 2182,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2430:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2430:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2408:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$2023_storage",
                              "typeString": "struct myStackingDappOld.Stake storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2187,
                                "name": "_amountToStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2144,
                                "src": "2450:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2188,
                                "name": "ts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2176,
                                "src": "2466:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2189,
                                "name": "ts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2176,
                                "src": "2470:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2474:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "74727565",
                                "id": 2191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2477:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 2186,
                              "name": "Stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2023,
                              "src": "2444:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Stake_$2023_storage_ptr_$",
                                "typeString": "type(struct myStackingDappOld.Stake storage pointer)"
                              }
                            },
                            "id": 2192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2444:38:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$2023_memory_ptr",
                              "typeString": "struct myStackingDappOld.Stake memory"
                            }
                          },
                          "src": "2408:74:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$2023_storage",
                            "typeString": "struct myStackingDappOld.Stake storage ref"
                          }
                        },
                        "id": 2194,
                        "nodeType": "ExpressionStatement",
                        "src": "2408:74:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2198,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2537:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2537:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2195,
                              "name": "listOfStaker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2046,
                              "src": "2519:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2519:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2519:29:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2201,
                        "nodeType": "ExpressionStatement",
                        "src": "2519:29:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2240,
                        "name": "totalTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2043,
                        "src": "2981:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2242,
                      "indexExpression": {
                        "id": 2241,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "2998:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2981:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2243,
                      "name": "_amountToStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "3016:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2981:49:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
                  "src": "2981:49:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2246,
                        "name": "totalTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2043,
                        "src": "3178:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2248,
                      "indexExpression": {
                        "id": 2247,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "3195:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3178:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2249,
                      "name": "_amountToStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "3213:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3178:49:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2258,
                  "nodeType": "IfStatement",
                  "src": "3175:97:13",
                  "trueBody": {
                    "id": 2257,
                    "nodeType": "Block",
                    "src": "3229:43:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2254,
                              "name": "_stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "3252:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2251,
                              "name": "listOfToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2049,
                              "src": "3235:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3235:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3235:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2256,
                        "nodeType": "ExpressionStatement",
                        "src": "3235:31:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2263,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3393:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3393:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2267,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3412:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_myStackingDappOld_$2574",
                              "typeString": "contract myStackingDappOld"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_myStackingDappOld_$2574",
                              "typeString": "contract myStackingDappOld"
                            }
                          ],
                          "id": 2266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3404:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2265,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3404:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3404:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2269,
                        "name": "_amountToStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "3418:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2260,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2142,
                            "src": "3365:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2259,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1301,
                          "src": "3358:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1301_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3358:21:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1301",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "3358:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3358:75:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2271,
                  "nodeType": "ExpressionStatement",
                  "src": "3358:75:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2273,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3453:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3453:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2275,
                        "name": "_amountToStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "3464:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2276,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "3479:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2272,
                      "name": "Staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2057,
                      "src": "3445:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:48:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2278,
                  "nodeType": "EmitStatement",
                  "src": "3440:53:13"
                }
              ]
            },
            "functionSelector": "adc9772e",
            "id": 2280,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2147,
                    "name": "_amountToStake",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2144,
                    "src": "2004:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2146,
                  "name": "amountStrictPositiv",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2086,
                  "src": "1984:19:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1984:35:13"
              }
            ],
            "name": "stake",
            "nameLocation": "1924:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "1938:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2280,
                  "src": "1930:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2144,
                  "mutability": "mutable",
                  "name": "_amountToStake",
                  "nameLocation": "1961:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2280,
                  "src": "1953:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1929:47:13"
            },
            "returnParameters": {
              "id": 2149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2020:0:13"
            },
            "scope": 2574,
            "src": "1915:1583:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2352,
              "nodeType": "Block",
              "src": "3639:763:13",
              "statements": [
                {
                  "expression": {
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2290,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "3741:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2294,
                          "indexExpression": {
                            "id": 2291,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "3748:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3741:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2295,
                        "indexExpression": {
                          "expression": {
                            "id": 2292,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3763:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3763:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3741:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "3741:41:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 2297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3786:2:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "3741:47:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:47:13"
                },
                {
                  "assignments": [
                    2301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2301,
                      "mutability": "mutable",
                      "name": "_amountToUnstake",
                      "nameLocation": "3856:16:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "3848:24:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3848:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2309,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2302,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2039,
                          "src": "3875:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                          }
                        },
                        "id": 2304,
                        "indexExpression": {
                          "id": 2303,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2282,
                          "src": "3882:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3875:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                          "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                        }
                      },
                      "id": 2307,
                      "indexExpression": {
                        "expression": {
                          "id": 2305,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3897:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3897:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3875:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$2023_storage",
                        "typeString": "struct myStackingDappOld.Stake storage ref"
                      }
                    },
                    "id": 2308,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "stakingAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2014,
                    "src": "3875:47:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3848:74:13"
                },
                {
                  "expression": {
                    "id": 2314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2310,
                        "name": "totalTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2043,
                        "src": "3987:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2312,
                      "indexExpression": {
                        "id": 2311,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "4004:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3987:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2313,
                      "name": "_amountToUnstake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "4022:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3987:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2315,
                  "nodeType": "ExpressionStatement",
                  "src": "3987:51:13"
                },
                {
                  "expression": {
                    "id": 2324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2316,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "4131:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2320,
                          "indexExpression": {
                            "id": 2317,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "4138:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4131:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2321,
                        "indexExpression": {
                          "expression": {
                            "id": 2318,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4153:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4153:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4131:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2322,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakingAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2014,
                      "src": "4131:47:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4181:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4131:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2325,
                  "nodeType": "ExpressionStatement",
                  "src": "4131:51:13"
                },
                {
                  "expression": {
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2326,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "4187:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2330,
                          "indexExpression": {
                            "id": 2327,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "4194:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4187:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2331,
                        "indexExpression": {
                          "expression": {
                            "id": 2328,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4209:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4209:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4187:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "staked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2022,
                      "src": "4187:40:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4230:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4187:48:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2335,
                  "nodeType": "ExpressionStatement",
                  "src": "4187:48:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2340,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4304:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4304:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2342,
                        "name": "_amountToUnstake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "4315:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2337,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "4280:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2336,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1301,
                          "src": "4273:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1301_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4273:21:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1301",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1250,
                      "src": "4273:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4273:59:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2344,
                  "nodeType": "ExpressionStatement",
                  "src": "4273:59:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2346,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4352:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4352:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2348,
                        "name": "_amountToUnstake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "4363:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2349,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "4380:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2345,
                      "name": "Unstaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2065,
                      "src": "4342:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 2350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4342:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2351,
                  "nodeType": "EmitStatement",
                  "src": "4337:57:13"
                }
              ]
            },
            "functionSelector": "f2888dbb",
            "id": 2353,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2285,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2282,
                    "src": "3614:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "expression": {
                      "id": 2286,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3628:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3628:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2288,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2284,
                  "name": "stakerExist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2113,
                  "src": "3602:11:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3602:37:13"
              }
            ],
            "name": "unstake",
            "nameLocation": "3564:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2282,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "3580:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "3572:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3571:23:13"
            },
            "returnParameters": {
              "id": 2289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3639:0:13"
            },
            "scope": 2574,
            "src": "3555:847:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2437,
              "nodeType": "Block",
              "src": "4681:757:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2365,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4694:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4694:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2367,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "4712:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                  }
                                },
                                "id": 2369,
                                "indexExpression": {
                                  "id": 2368,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2356,
                                  "src": "4719:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4712:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                  "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                }
                              },
                              "id": 2372,
                              "indexExpression": {
                                "expression": {
                                  "id": 2370,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4734:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4734:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4712:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                "typeString": "struct myStackingDappOld.Stake storage ref"
                              }
                            },
                            "id": 2373,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2018,
                            "src": "4712:49:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4694:67:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "3330",
                          "id": 2375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4764:10:13",
                          "subdenomination": "seconds",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        "src": "4694:80:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73746f70207370616d",
                        "id": 2377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4775:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab",
                          "typeString": "literal_string \"stop spam\""
                        },
                        "value": "stop spam"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab",
                          "typeString": "literal_string \"stop spam\""
                        }
                      ],
                      "id": 2364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4686:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4686:101:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2379,
                  "nodeType": "ExpressionStatement",
                  "src": "4686:101:13"
                },
                {
                  "assignments": [
                    2381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2381,
                      "mutability": "mutable",
                      "name": "_rewards",
                      "nameLocation": "4859:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2437,
                      "src": "4851:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2380,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4851:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2389,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2382,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2039,
                          "src": "4870:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                          }
                        },
                        "id": 2384,
                        "indexExpression": {
                          "id": 2383,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2356,
                          "src": "4877:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4870:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                          "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                        }
                      },
                      "id": 2387,
                      "indexExpression": {
                        "expression": {
                          "id": 2385,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4892:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4892:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4870:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$2023_storage",
                        "typeString": "struct myStackingDappOld.Stake storage ref"
                      }
                    },
                    "id": 2388,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rewards",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2020,
                    "src": "4870:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4851:60:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2390,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "4919:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2392,
                          "indexExpression": {
                            "id": 2391,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2356,
                            "src": "4926:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4919:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2395,
                        "indexExpression": {
                          "expression": {
                            "id": 2393,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4941:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4941:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4919:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2396,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakingAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2014,
                      "src": "4919:47:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4969:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4919:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2408,
                  "nodeType": "IfStatement",
                  "src": "4916:125:13",
                  "trueBody": {
                    "id": 2407,
                    "nodeType": "Block",
                    "src": "4972:69:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2399,
                            "name": "_rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2381,
                            "src": "4978:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2401,
                                "name": "_stakingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2356,
                                "src": "5009:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2402,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5024:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5024:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2400,
                              "name": "calcRewardPerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2492,
                              "src": "4990:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) returns (uint256)"
                              }
                            },
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4990:45:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4978:57:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2406,
                        "nodeType": "ExpressionStatement",
                        "src": "4978:57:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2409,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "5079:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2413,
                          "indexExpression": {
                            "id": 2410,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2356,
                            "src": "5086:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5079:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2414,
                        "indexExpression": {
                          "expression": {
                            "id": 2411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5101:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5101:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5079:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2415,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "5079:41:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5123:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5079:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2418,
                  "nodeType": "ExpressionStatement",
                  "src": "5079:45:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2422,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5167:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5167:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2424,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "5178:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2419,
                        "name": "rewardsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2026,
                        "src": "5149:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AALToken_$1385",
                          "typeString": "contract AALToken"
                        }
                      },
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1384,
                      "src": "5149:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5149:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2426,
                  "nodeType": "ExpressionStatement",
                  "src": "5149:38:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2428,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5387:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5387:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2430,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "5399:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2433,
                            "name": "rewardsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2026,
                            "src": "5416:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AALToken_$1385",
                              "typeString": "contract AALToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AALToken_$1385",
                              "typeString": "contract AALToken"
                            }
                          ],
                          "id": 2432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5408:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2431,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5408:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5408:21:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2427,
                      "name": "Rewarding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2073,
                      "src": "5377:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 2435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5377:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2436,
                  "nodeType": "EmitStatement",
                  "src": "5372:58:13"
                }
              ]
            },
            "documentation": {
              "id": 2354,
              "nodeType": "StructuredDocumentation",
              "src": "4455:131:13",
              "text": " Computes rewards and transfers them msg.sender\n _token : staked token\n require max every 30 sec can be called"
            },
            "functionSelector": "c00007b0",
            "id": 2438,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2359,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2356,
                    "src": "4656:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "expression": {
                      "id": 2360,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "4670:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4670:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2362,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2358,
                  "name": "stakerExist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2113,
                  "src": "4644:11:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "4644:37:13"
              }
            ],
            "name": "getReward",
            "nameLocation": "4604:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2356,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "4622:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2438,
                  "src": "4614:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4614:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4613:23:13"
            },
            "returnParameters": {
              "id": 2363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4681:0:13"
            },
            "scope": 2574,
            "src": "4595:843:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2491,
              "nodeType": "Block",
              "src": "5530:622:13",
              "statements": [
                {
                  "assignments": [
                    2448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2448,
                      "mutability": "mutable",
                      "name": "_rewards",
                      "nameLocation": "5841:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2491,
                      "src": "5833:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2447,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5833:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2478,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2449,
                            "name": "DAILY_REWARD_RATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2032,
                            "src": "5852:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2450,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "5873:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5873:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2452,
                                        "name": "stakes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2039,
                                        "src": "5891:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                          "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                        }
                                      },
                                      "id": 2454,
                                      "indexExpression": {
                                        "id": 2453,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2440,
                                        "src": "5898:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5891:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                        "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                      }
                                    },
                                    "id": 2456,
                                    "indexExpression": {
                                      "id": 2455,
                                      "name": "_sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2442,
                                      "src": "5906:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5891:23:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                      "typeString": "struct myStackingDappOld.Stake storage ref"
                                    }
                                  },
                                  "id": 2457,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "updateTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2018,
                                  "src": "5891:39:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5873:57:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2459,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5872:59:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5852:79:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2462,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2440,
                              "src": "5950:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2461,
                            "name": "getPriceOfToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "5934:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5934:23:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5852:105:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2465,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2039,
                              "src": "5960:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                              }
                            },
                            "id": 2467,
                            "indexExpression": {
                              "id": 2466,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2440,
                              "src": "5967:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5960:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                              "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                            }
                          },
                          "id": 2469,
                          "indexExpression": {
                            "id": 2468,
                            "name": "_sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2442,
                            "src": "5975:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5960:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$2023_storage",
                            "typeString": "struct myStackingDappOld.Stake storage ref"
                          }
                        },
                        "id": 2470,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakingAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2014,
                        "src": "5960:37:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5852:145:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2472,
                              "name": "getPriceOfAllSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2530,
                              "src": "6001:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 2473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6001:21:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 2474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6025:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "6001:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2476,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6000:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5852:178:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5833:197:13"
                },
                {
                  "expression": {
                    "id": 2487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2479,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "6061:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2482,
                          "indexExpression": {
                            "id": 2480,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2440,
                            "src": "6068:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6061:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2483,
                        "indexExpression": {
                          "id": 2481,
                          "name": "_sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2442,
                          "src": "6076:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6061:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2484,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2018,
                      "src": "6061:39:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2485,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "6103:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6103:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6061:57:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2488,
                  "nodeType": "ExpressionStatement",
                  "src": "6061:57:13"
                },
                {
                  "expression": {
                    "id": 2489,
                    "name": "_rewards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2448,
                    "src": "6136:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2446,
                  "id": 2490,
                  "nodeType": "Return",
                  "src": "6129:15:13"
                }
              ]
            },
            "id": 2492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcRewardPerStake",
            "nameLocation": "5455:18:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2440,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5482:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "5474:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5474:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2442,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "5498:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "5490:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5490:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5473:33:13"
            },
            "returnParameters": {
              "id": 2446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "5524:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5523:6:13"
            },
            "scope": 2574,
            "src": "5446:706:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2529,
              "nodeType": "Block",
              "src": "6250:175:13",
              "statements": [
                {
                  "assignments": [
                    2498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2498,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6263:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2529,
                      "src": "6255:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2497,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6255:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2499,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6255:14:13"
                },
                {
                  "body": {
                    "id": 2525,
                    "nodeType": "Block",
                    "src": "6317:86:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2511,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2498,
                            "src": "6323:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 2513,
                                    "name": "listOfToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2049,
                                    "src": "6349:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 2515,
                                  "indexExpression": {
                                    "id": 2514,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2501,
                                    "src": "6361:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6349:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2512,
                                "name": "getPriceOfToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2558,
                                "src": "6333:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 2516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6333:31:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 2517,
                                "name": "totalTokenSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2043,
                                "src": "6365:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2521,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2518,
                                  "name": "listOfToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2049,
                                  "src": "6382:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2520,
                                "indexExpression": {
                                  "id": 2519,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2501,
                                  "src": "6394:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6382:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6365:32:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6333:64:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6323:74:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2524,
                        "nodeType": "ExpressionStatement",
                        "src": "6323:74:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2504,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2501,
                      "src": "6290:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2505,
                        "name": "listOfToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2049,
                        "src": "6292:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6292:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6290:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2526,
                  "initializationExpression": {
                    "assignments": [
                      2501
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2501,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6283:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2526,
                        "src": "6278:6:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2500,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6278:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2503,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6287:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6278:10:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6313:3:13",
                      "subExpression": {
                        "id": 2508,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "6313:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2510,
                    "nodeType": "ExpressionStatement",
                    "src": "6313:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "6274:129:13"
                },
                {
                  "expression": {
                    "id": 2527,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2498,
                    "src": "6414:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2496,
                  "id": 2528,
                  "nodeType": "Return",
                  "src": "6407:13:13"
                }
              ]
            },
            "functionSelector": "d1f86806",
            "id": 2530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceOfAllSupply",
            "nameLocation": "6203:19:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6222:2:13"
            },
            "returnParameters": {
              "id": 2496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2530,
                  "src": "6245:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6245:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6244:6:13"
            },
            "scope": 2574,
            "src": "6194:231:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2557,
              "nodeType": "Block",
              "src": "6499:123:13",
              "statements": [
                {
                  "assignments": [
                    2538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2538,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "6536:1:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2557,
                      "src": "6532:5:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 2537,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "6532:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2545,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2541,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "6563:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2542,
                          "name": "Denominations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "6570:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Denominations_$116_$",
                            "typeString": "type(library Denominations)"
                          }
                        },
                        "id": 2543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "6570:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2539,
                        "name": "priceConsumer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2029,
                        "src": "6540:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                          "typeString": "contract PriceConsumer"
                        }
                      },
                      "id": 2540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2634,
                      "src": "6540:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_int256_$",
                        "typeString": "function (address,address) view external returns (int256)"
                      }
                    },
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6540:48:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6532:56:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2548,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2538,
                            "src": "6605:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6607:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6605:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 2553,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "6612:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "6605:8:13",
                        "trueExpression": {
                          "id": 2552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "6609:2:13",
                          "subExpression": {
                            "id": 2551,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2538,
                            "src": "6610:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 2547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6600:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 2546,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6600:4:13",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6600:14:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2536,
                  "id": 2556,
                  "nodeType": "Return",
                  "src": "6593:21:13"
                }
              ]
            },
            "functionSelector": "8da84478",
            "id": 2558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceOfToken",
            "nameLocation": "6442:15:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2532,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6466:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2558,
                  "src": "6458:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6457:16:13"
            },
            "returnParameters": {
              "id": 2536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2535,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2558,
                  "src": "6494:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2534,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6494:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6493:6:13"
            },
            "scope": 2574,
            "src": "6433:189:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eaaa65ed",
            "id": 2561,
            "mutability": "mutable",
            "name": "wf",
            "nameLocation": "7192:2:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "7179:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2559,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "7179:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 2560,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7197:2:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a98e629",
            "id": 2564,
            "mutability": "mutable",
            "name": "stackingToken",
            "nameLocation": "7221:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "7203:31:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenBidon_$2679",
              "typeString": "contract TokenBidon"
            },
            "typeName": {
              "id": 2563,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2562,
                "name": "TokenBidon",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2679,
                "src": "7203:10:13"
              },
              "referencedDeclaration": 2679,
              "src": "7203:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenBidon_$2679",
                "typeString": "contract TokenBidon"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2572,
              "nodeType": "Block",
              "src": "7302:28:13",
              "statements": [
                {
                  "expression": {
                    "id": 2570,
                    "name": "listOfToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2049,
                    "src": "7314:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2569,
                  "id": 2571,
                  "nodeType": "Return",
                  "src": "7307:18:13"
                }
              ]
            },
            "functionSelector": "273cbaa0",
            "id": 2573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenList",
            "nameLocation": "7250:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7262:2:13"
            },
            "returnParameters": {
              "id": 2569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2573,
                  "src": "7285:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2566,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7285:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2567,
                    "nodeType": "ArrayTypeName",
                    "src": "7285:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7284:18:13"
            },
            "scope": 2574,
            "src": "7241:89:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2575,
        "src": "273:7096:13",
        "usedErrors": []
      }
    ],
    "src": "33:7336:13"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/MyStackingDappOld.sol",
    "exportedSymbols": {
      "AALToken": [
        1385
      ],
      "AggregatorInterface": [
        164
      ],
      "AggregatorV2V3Interface": [
        173
      ],
      "AggregatorV3Interface": [
        219
      ],
      "Context": [
        1348
      ],
      "Denominations": [
        116
      ],
      "ERC20": [
        1223
      ],
      "FeedRegistryInterface": [
        530
      ],
      "IERC20": [
        1301
      ],
      "IERC20Metadata": [
        1326
      ],
      "Ownable": [
        635
      ],
      "PriceConsumer": [
        2635
      ],
      "TokenBidon": [
        2679
      ],
      "myStackingDappOld": [
        2574
      ]
    },
    "id": 2575,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2009,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "absolutePath": "project:/contracts/AALToken.sol",
        "file": "./AALToken.sol",
        "id": 2010,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2575,
        "sourceUnit": 1386,
        "src": "60:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TokenBidon.sol",
        "file": "./TokenBidon.sol",
        "id": 2011,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2575,
        "sourceUnit": 2680,
        "src": "86:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PriceConsumer.sol",
        "file": "./PriceConsumer.sol",
        "id": 2012,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2575,
        "sourceUnit": 2636,
        "src": "114:29:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "myStackingDappOld",
        "contractDependencies": [
          1385,
          2635,
          2679
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2574,
        "linearizedBaseContracts": [
          2574
        ],
        "name": "myStackingDappOld",
        "nameLocation": "282:17:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "myStackingDappOld.Stake",
            "id": 2023,
            "members": [
              {
                "constant": false,
                "id": 2014,
                "mutability": "mutable",
                "name": "stakingAmount",
                "nameLocation": "371:13:13",
                "nodeType": "VariableDeclaration",
                "scope": 2023,
                "src": "363:21:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2013,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "363:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2016,
                "mutability": "mutable",
                "name": "startStakingTimestamp",
                "nameLocation": "397:21:13",
                "nodeType": "VariableDeclaration",
                "scope": 2023,
                "src": "389:29:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2015,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "389:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2018,
                "mutability": "mutable",
                "name": "updateTimestamp",
                "nameLocation": "431:15:13",
                "nodeType": "VariableDeclaration",
                "scope": 2023,
                "src": "423:23:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2017,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "423:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2020,
                "mutability": "mutable",
                "name": "rewards",
                "nameLocation": "459:7:13",
                "nodeType": "VariableDeclaration",
                "scope": 2023,
                "src": "451:15:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2019,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "451:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2022,
                "mutability": "mutable",
                "name": "staked",
                "nameLocation": "476:6:13",
                "nodeType": "VariableDeclaration",
                "scope": 2023,
                "src": "471:11:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2021,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "471:4:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "352:5:13",
            "nodeType": "StructDefinition",
            "scope": 2574,
            "src": "345:142:13",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d1af0c7d",
            "id": 2026,
            "mutability": "mutable",
            "name": "rewardsToken",
            "nameLocation": "542:12:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "526:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AALToken_$1385",
              "typeString": "contract AALToken"
            },
            "typeName": {
              "id": 2025,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2024,
                "name": "AALToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1385,
                "src": "526:8:13"
              },
              "referencedDeclaration": 1385,
              "src": "526:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AALToken_$1385",
                "typeString": "contract AALToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "461a758c",
            "id": 2029,
            "mutability": "mutable",
            "name": "priceConsumer",
            "nameLocation": "579:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "558:34:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceConsumer_$2635",
              "typeString": "contract PriceConsumer"
            },
            "typeName": {
              "id": 2028,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2027,
                "name": "PriceConsumer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "558:13:13"
              },
              "referencedDeclaration": 2635,
              "src": "558:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                "typeString": "contract PriceConsumer"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9a88fc4",
            "id": 2032,
            "mutability": "immutable",
            "name": "DAILY_REWARD_RATE",
            "nameLocation": "619:17:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "596:44:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2030,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "596:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 2031,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "639:1:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a4e47b66",
            "id": 2039,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "861:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "808:59:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake))"
            },
            "typeName": {
              "id": 2038,
              "keyType": {
                "id": 2033,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "816:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "808:45:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake))"
              },
              "valueType": {
                "id": 2037,
                "keyType": {
                  "id": 2034,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "835:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "827:25:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                  "typeString": "mapping(address => struct myStackingDappOld.Stake)"
                },
                "valueType": {
                  "id": 2036,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2035,
                    "name": "Stake",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2023,
                    "src": "846:5:13"
                  },
                  "referencedDeclaration": 2023,
                  "src": "846:5:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$2023_storage_ptr",
                    "typeString": "struct myStackingDappOld.Stake"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2c2332fe",
            "id": 2043,
            "mutability": "mutable",
            "name": "totalTokenSupply",
            "nameLocation": "952:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "917:51:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2042,
              "keyType": {
                "id": 2040,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "925:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "917:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2041,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "936:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "369ba1ac",
            "id": 2046,
            "mutability": "mutable",
            "name": "listOfStaker",
            "nameLocation": "1003:12:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "986:29:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2044,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "986:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2045,
              "nodeType": "ArrayTypeName",
              "src": "986:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6a36c343",
            "id": 2049,
            "mutability": "mutable",
            "name": "listOfToken",
            "nameLocation": "1036:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "1019:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2047,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1019:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2048,
              "nodeType": "ArrayTypeName",
              "src": "1019:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2057,
            "name": "Staking",
            "nameLocation": "1059:7:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2051,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakerAddress",
                  "nameLocation": "1075:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "1067:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2053,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountToStake",
                  "nameLocation": "1098:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "1090:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2055,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "1121:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "1113:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1066:68:13"
            },
            "src": "1053:82:13"
          },
          {
            "anonymous": false,
            "id": 2065,
            "name": "Unstaking",
            "nameLocation": "1147:9:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2059,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakerAddress",
                  "nameLocation": "1165:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2065,
                  "src": "1157:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2061,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountToUnstake",
                  "nameLocation": "1188:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2065,
                  "src": "1180:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2063,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "1213:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2065,
                  "src": "1205:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1156:70:13"
            },
            "src": "1141:86:13"
          },
          {
            "anonymous": false,
            "id": 2073,
            "name": "Rewarding",
            "nameLocation": "1236:9:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2067,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakerAddress",
                  "nameLocation": "1254:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "1246:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2069,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewards",
                  "nameLocation": "1277:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "1269:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2071,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "1294:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "1286:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:62:13"
            },
            "src": "1230:78:13"
          },
          {
            "body": {
              "id": 2085,
              "nodeType": "Block",
              "src": "1358:50:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2078,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2075,
                          "src": "1371:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1381:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1371:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74203c3d2030",
                        "id": 2081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1383:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec",
                          "typeString": "literal_string \"Amount <= 0\""
                        },
                        "value": "Amount <= 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c1ca52cc33408cafe69a86031a73e9b60a3b7494979ddb5e940ab8ad1fff3ec",
                          "typeString": "literal_string \"Amount <= 0\""
                        }
                      ],
                      "id": 2077,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1363:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1363:34:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2083,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:34:13"
                },
                {
                  "id": 2084,
                  "nodeType": "PlaceholderStatement",
                  "src": "1402:1:13"
                }
              ]
            },
            "id": 2086,
            "name": "amountStrictPositiv",
            "nameLocation": "1322:19:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2075,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1350:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2086,
                  "src": "1342:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1341:17:13"
            },
            "src": "1313:95:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2112,
              "nodeType": "Block",
              "src": "1466:123:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2093,
                                "name": "stakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2039,
                                "src": "1479:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                }
                              },
                              "id": 2095,
                              "indexExpression": {
                                "id": 2094,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2088,
                                "src": "1486:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1479:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                              }
                            },
                            "id": 2097,
                            "indexExpression": {
                              "id": 2096,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2090,
                              "src": "1494:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1479:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$2023_storage",
                              "typeString": "struct myStackingDappOld.Stake storage ref"
                            }
                          },
                          "id": 2098,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2022,
                          "src": "1479:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2099,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "1513:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                  }
                                },
                                "id": 2101,
                                "indexExpression": {
                                  "id": 2100,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2088,
                                  "src": "1520:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1513:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                  "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                }
                              },
                              "id": 2103,
                              "indexExpression": {
                                "id": 2102,
                                "name": "_sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2090,
                                "src": "1528:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1513:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                "typeString": "struct myStackingDappOld.Stake storage ref"
                              }
                            },
                            "id": 2104,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2020,
                            "src": "1513:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1547:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1513:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1479:69:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061207374616b6572206f72206e6f2072657761726473",
                        "id": 2108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1549:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92",
                          "typeString": "literal_string \"Not a staker or no rewards\""
                        },
                        "value": "Not a staker or no rewards"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a2672d997d7e8dd6049ca7e38061a7ccf90d28fb1c4801877638d66ba43eb92",
                          "typeString": "literal_string \"Not a staker or no rewards\""
                        }
                      ],
                      "id": 2092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1471:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:107:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2110,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:107:13"
                },
                {
                  "id": 2111,
                  "nodeType": "PlaceholderStatement",
                  "src": "1583:1:13"
                }
              ]
            },
            "id": 2113,
            "name": "stakerExist",
            "nameLocation": "1422:11:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1442:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2113,
                  "src": "1434:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2090,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "1458:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2113,
                  "src": "1450:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1433:33:13"
            },
            "src": "1413:176:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2139,
              "nodeType": "Block",
              "src": "1697:164:13",
              "statements": [
                {
                  "expression": {
                    "id": 2121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2116,
                      "name": "rewardsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2026,
                      "src": "1702:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AALToken_$1385",
                        "typeString": "contract AALToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1717:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AALToken_$1385_$",
                          "typeString": "function () returns (contract AALToken)"
                        },
                        "typeName": {
                          "id": 2118,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2117,
                            "name": "AALToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1385,
                            "src": "1721:8:13"
                          },
                          "referencedDeclaration": 1385,
                          "src": "1721:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AALToken_$1385",
                            "typeString": "contract AALToken"
                          }
                        }
                      },
                      "id": 2120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1717:14:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AALToken_$1385",
                        "typeString": "contract AALToken"
                      }
                    },
                    "src": "1702:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AALToken_$1385",
                      "typeString": "contract AALToken"
                    }
                  },
                  "id": 2122,
                  "nodeType": "ExpressionStatement",
                  "src": "1702:29:13"
                },
                {
                  "expression": {
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2123,
                      "name": "priceConsumer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2029,
                      "src": "1736:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                        "typeString": "contract PriceConsumer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307841613746366637663530373435376131454531353766453937463663374442324245656335634430",
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1770:42:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xAa7F6f7f507457a1EE157fE97F6c7DB2BEec5cD0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1752:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_PriceConsumer_$2635_$",
                          "typeString": "function (address) returns (contract PriceConsumer)"
                        },
                        "typeName": {
                          "id": 2125,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2124,
                            "name": "PriceConsumer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2635,
                            "src": "1756:13:13"
                          },
                          "referencedDeclaration": 2635,
                          "src": "1756:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                            "typeString": "contract PriceConsumer"
                          }
                        }
                      },
                      "id": 2128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1752:61:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                        "typeString": "contract PriceConsumer"
                      }
                    },
                    "src": "1736:77:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                      "typeString": "contract PriceConsumer"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:77:13"
                },
                {
                  "expression": {
                    "id": 2137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2131,
                      "name": "stackingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2564,
                      "src": "1818:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenBidon_$2679",
                        "typeString": "contract TokenBidon"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "313030303030",
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1849:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          }
                        ],
                        "id": 2134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1834:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_TokenBidon_$2679_$",
                          "typeString": "function (uint256) returns (contract TokenBidon)"
                        },
                        "typeName": {
                          "id": 2133,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2132,
                            "name": "TokenBidon",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2679,
                            "src": "1838:10:13"
                          },
                          "referencedDeclaration": 2679,
                          "src": "1838:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenBidon_$2679",
                            "typeString": "contract TokenBidon"
                          }
                        }
                      },
                      "id": 2136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1834:22:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenBidon_$2679",
                        "typeString": "contract TokenBidon"
                      }
                    },
                    "src": "1818:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenBidon_$2679",
                      "typeString": "contract TokenBidon"
                    }
                  },
                  "id": 2138,
                  "nodeType": "ExpressionStatement",
                  "src": "1818:38:13"
                }
              ]
            },
            "id": 2140,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1694:2:13"
            },
            "returnParameters": {
              "id": 2115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1697:0:13"
            },
            "scope": 2574,
            "src": "1683:178:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2279,
              "nodeType": "Block",
              "src": "2020:1478:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2155,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2136:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2136:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2159,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2156:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_myStackingDappOld_$2574",
                                    "typeString": "contract myStackingDappOld"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_myStackingDappOld_$2574",
                                    "typeString": "contract myStackingDappOld"
                                  }
                                ],
                                "id": 2158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2148:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2157,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2148:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2148:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2152,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2142,
                                  "src": "2111:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2151,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1301,
                                "src": "2104:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1301_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2104:21:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1301",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1260,
                            "src": "2104:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:58:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2162,
                          "name": "_amountToStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2144,
                          "src": "2166:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2104:76:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436865636b2074686520746f6b656e20616c6c6f77616e6365",
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2182:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                          "typeString": "literal_string \"Check the token allowance\""
                        },
                        "value": "Check the token allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                          "typeString": "literal_string \"Check the token allowance\""
                        }
                      ],
                      "id": 2150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2096:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:114:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:114:13"
                },
                {
                  "condition": {
                    "id": 2174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2226:41:13",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2167,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "2227:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2169,
                          "indexExpression": {
                            "id": 2168,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2142,
                            "src": "2234:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2227:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2172,
                        "indexExpression": {
                          "expression": {
                            "id": 2170,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2249:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2249:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2227:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2022,
                      "src": "2227:40:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2238,
                    "nodeType": "Block",
                    "src": "2560:343:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2203,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "2664:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                  }
                                },
                                "id": 2207,
                                "indexExpression": {
                                  "id": 2204,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2142,
                                  "src": "2671:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2664:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                  "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                }
                              },
                              "id": 2208,
                              "indexExpression": {
                                "expression": {
                                  "id": 2205,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2686:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2686:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2664:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                "typeString": "struct myStackingDappOld.Stake storage ref"
                              }
                            },
                            "id": 2209,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2020,
                            "src": "2664:41:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2211,
                                "name": "_stakingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2142,
                                "src": "2728:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2212,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2742:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2742:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2210,
                              "name": "calcRewardPerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2492,
                              "src": "2709:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) returns (uint256)"
                              }
                            },
                            "id": 2214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2709:44:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2664:89:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2216,
                        "nodeType": "ExpressionStatement",
                        "src": "2664:89:13"
                      },
                      {
                        "expression": {
                          "id": 2225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2217,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "2759:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                  }
                                },
                                "id": 2221,
                                "indexExpression": {
                                  "id": 2218,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2142,
                                  "src": "2766:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2759:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                  "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                }
                              },
                              "id": 2222,
                              "indexExpression": {
                                "expression": {
                                  "id": 2219,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2781:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2781:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2759:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                "typeString": "struct myStackingDappOld.Stake storage ref"
                              }
                            },
                            "id": 2223,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stakingAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2014,
                            "src": "2759:47:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2224,
                            "name": "_amountToStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "2810:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2759:65:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2226,
                        "nodeType": "ExpressionStatement",
                        "src": "2759:65:13"
                      },
                      {
                        "expression": {
                          "id": 2236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2227,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "2830:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                  }
                                },
                                "id": 2231,
                                "indexExpression": {
                                  "id": 2228,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2142,
                                  "src": "2837:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2830:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                  "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                }
                              },
                              "id": 2232,
                              "indexExpression": {
                                "expression": {
                                  "id": 2229,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2852:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2852:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2830:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                "typeString": "struct myStackingDappOld.Stake storage ref"
                              }
                            },
                            "id": 2233,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "updateTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2018,
                            "src": "2830:49:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2234,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2882:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2882:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2830:67:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2237,
                        "nodeType": "ExpressionStatement",
                        "src": "2830:67:13"
                      }
                    ]
                  },
                  "id": 2239,
                  "nodeType": "IfStatement",
                  "src": "2223:680:13",
                  "trueBody": {
                    "id": 2202,
                    "nodeType": "Block",
                    "src": "2268:286:13",
                    "statements": [
                      {
                        "assignments": [
                          2176
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2176,
                            "mutability": "mutable",
                            "name": "ts",
                            "nameLocation": "2382:2:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2202,
                            "src": "2374:10:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2175,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2374:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2179,
                        "initialValue": {
                          "expression": {
                            "id": 2177,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2387:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2387:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2374:28:13"
                      },
                      {
                        "expression": {
                          "id": 2193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2180,
                                "name": "stakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2039,
                                "src": "2408:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                }
                              },
                              "id": 2184,
                              "indexExpression": {
                                "id": 2181,
                                "name": "_stakingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2142,
                                "src": "2415:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2408:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                              }
                            },
                            "id": 2185,
                            "indexExpression": {
                              "expression": {
                                "id": 2182,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2430:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2430:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2408:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$2023_storage",
                              "typeString": "struct myStackingDappOld.Stake storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2187,
                                "name": "_amountToStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2144,
                                "src": "2450:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2188,
                                "name": "ts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2176,
                                "src": "2466:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2189,
                                "name": "ts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2176,
                                "src": "2470:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2474:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "74727565",
                                "id": 2191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2477:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 2186,
                              "name": "Stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2023,
                              "src": "2444:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Stake_$2023_storage_ptr_$",
                                "typeString": "type(struct myStackingDappOld.Stake storage pointer)"
                              }
                            },
                            "id": 2192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2444:38:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$2023_memory_ptr",
                              "typeString": "struct myStackingDappOld.Stake memory"
                            }
                          },
                          "src": "2408:74:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$2023_storage",
                            "typeString": "struct myStackingDappOld.Stake storage ref"
                          }
                        },
                        "id": 2194,
                        "nodeType": "ExpressionStatement",
                        "src": "2408:74:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2198,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2537:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2537:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2195,
                              "name": "listOfStaker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2046,
                              "src": "2519:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2519:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2519:29:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2201,
                        "nodeType": "ExpressionStatement",
                        "src": "2519:29:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2240,
                        "name": "totalTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2043,
                        "src": "2981:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2242,
                      "indexExpression": {
                        "id": 2241,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "2998:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2981:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2243,
                      "name": "_amountToStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "3016:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2981:49:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
                  "src": "2981:49:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2246,
                        "name": "totalTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2043,
                        "src": "3178:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2248,
                      "indexExpression": {
                        "id": 2247,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "3195:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3178:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2249,
                      "name": "_amountToStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "3213:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3178:49:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2258,
                  "nodeType": "IfStatement",
                  "src": "3175:97:13",
                  "trueBody": {
                    "id": 2257,
                    "nodeType": "Block",
                    "src": "3229:43:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2254,
                              "name": "_stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "3252:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2251,
                              "name": "listOfToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2049,
                              "src": "3235:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3235:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3235:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2256,
                        "nodeType": "ExpressionStatement",
                        "src": "3235:31:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2263,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3393:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3393:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2267,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3412:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_myStackingDappOld_$2574",
                              "typeString": "contract myStackingDappOld"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_myStackingDappOld_$2574",
                              "typeString": "contract myStackingDappOld"
                            }
                          ],
                          "id": 2266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3404:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2265,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3404:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3404:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2269,
                        "name": "_amountToStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "3418:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2260,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2142,
                            "src": "3365:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2259,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1301,
                          "src": "3358:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1301_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3358:21:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1301",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "3358:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3358:75:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2271,
                  "nodeType": "ExpressionStatement",
                  "src": "3358:75:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2273,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3453:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3453:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2275,
                        "name": "_amountToStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "3464:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2276,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "3479:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2272,
                      "name": "Staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2057,
                      "src": "3445:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:48:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2278,
                  "nodeType": "EmitStatement",
                  "src": "3440:53:13"
                }
              ]
            },
            "functionSelector": "adc9772e",
            "id": 2280,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2147,
                    "name": "_amountToStake",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2144,
                    "src": "2004:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2146,
                  "name": "amountStrictPositiv",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2086,
                  "src": "1984:19:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1984:35:13"
              }
            ],
            "name": "stake",
            "nameLocation": "1924:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "1938:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2280,
                  "src": "1930:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2144,
                  "mutability": "mutable",
                  "name": "_amountToStake",
                  "nameLocation": "1961:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2280,
                  "src": "1953:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1929:47:13"
            },
            "returnParameters": {
              "id": 2149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2020:0:13"
            },
            "scope": 2574,
            "src": "1915:1583:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2352,
              "nodeType": "Block",
              "src": "3639:763:13",
              "statements": [
                {
                  "expression": {
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2290,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "3741:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2294,
                          "indexExpression": {
                            "id": 2291,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "3748:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3741:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2295,
                        "indexExpression": {
                          "expression": {
                            "id": 2292,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3763:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3763:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3741:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "3741:41:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 2297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3786:2:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "3741:47:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:47:13"
                },
                {
                  "assignments": [
                    2301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2301,
                      "mutability": "mutable",
                      "name": "_amountToUnstake",
                      "nameLocation": "3856:16:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2352,
                      "src": "3848:24:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3848:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2309,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2302,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2039,
                          "src": "3875:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                          }
                        },
                        "id": 2304,
                        "indexExpression": {
                          "id": 2303,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2282,
                          "src": "3882:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3875:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                          "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                        }
                      },
                      "id": 2307,
                      "indexExpression": {
                        "expression": {
                          "id": 2305,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3897:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3897:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3875:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$2023_storage",
                        "typeString": "struct myStackingDappOld.Stake storage ref"
                      }
                    },
                    "id": 2308,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "stakingAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2014,
                    "src": "3875:47:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3848:74:13"
                },
                {
                  "expression": {
                    "id": 2314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2310,
                        "name": "totalTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2043,
                        "src": "3987:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2312,
                      "indexExpression": {
                        "id": 2311,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "4004:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3987:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2313,
                      "name": "_amountToUnstake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "4022:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3987:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2315,
                  "nodeType": "ExpressionStatement",
                  "src": "3987:51:13"
                },
                {
                  "expression": {
                    "id": 2324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2316,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "4131:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2320,
                          "indexExpression": {
                            "id": 2317,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "4138:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4131:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2321,
                        "indexExpression": {
                          "expression": {
                            "id": 2318,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4153:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4153:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4131:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2322,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakingAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2014,
                      "src": "4131:47:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4181:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4131:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2325,
                  "nodeType": "ExpressionStatement",
                  "src": "4131:51:13"
                },
                {
                  "expression": {
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2326,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "4187:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2330,
                          "indexExpression": {
                            "id": 2327,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "4194:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4187:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2331,
                        "indexExpression": {
                          "expression": {
                            "id": 2328,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4209:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4209:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4187:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "staked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2022,
                      "src": "4187:40:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4230:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4187:48:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2335,
                  "nodeType": "ExpressionStatement",
                  "src": "4187:48:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2340,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4304:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4304:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2342,
                        "name": "_amountToUnstake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "4315:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2337,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "4280:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2336,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1301,
                          "src": "4273:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1301_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4273:21:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1301",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1250,
                      "src": "4273:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4273:59:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2344,
                  "nodeType": "ExpressionStatement",
                  "src": "4273:59:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2346,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4352:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4352:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2348,
                        "name": "_amountToUnstake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "4363:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2349,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "4380:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2345,
                      "name": "Unstaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2065,
                      "src": "4342:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 2350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4342:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2351,
                  "nodeType": "EmitStatement",
                  "src": "4337:57:13"
                }
              ]
            },
            "functionSelector": "f2888dbb",
            "id": 2353,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2285,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2282,
                    "src": "3614:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "expression": {
                      "id": 2286,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3628:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3628:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2288,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2284,
                  "name": "stakerExist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2113,
                  "src": "3602:11:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3602:37:13"
              }
            ],
            "name": "unstake",
            "nameLocation": "3564:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2282,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "3580:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2353,
                  "src": "3572:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3571:23:13"
            },
            "returnParameters": {
              "id": 2289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3639:0:13"
            },
            "scope": 2574,
            "src": "3555:847:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2437,
              "nodeType": "Block",
              "src": "4681:757:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2365,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4694:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4694:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2367,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "4712:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                  }
                                },
                                "id": 2369,
                                "indexExpression": {
                                  "id": 2368,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2356,
                                  "src": "4719:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4712:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                  "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                }
                              },
                              "id": 2372,
                              "indexExpression": {
                                "expression": {
                                  "id": 2370,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4734:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4734:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4712:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                "typeString": "struct myStackingDappOld.Stake storage ref"
                              }
                            },
                            "id": 2373,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2018,
                            "src": "4712:49:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4694:67:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "3330",
                          "id": 2375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4764:10:13",
                          "subdenomination": "seconds",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        "src": "4694:80:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73746f70207370616d",
                        "id": 2377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4775:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab",
                          "typeString": "literal_string \"stop spam\""
                        },
                        "value": "stop spam"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8f9fed710f16862e6a28ed361f55dcdfd1421c6eda6741ce9bdfe498be856ab",
                          "typeString": "literal_string \"stop spam\""
                        }
                      ],
                      "id": 2364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4686:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4686:101:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2379,
                  "nodeType": "ExpressionStatement",
                  "src": "4686:101:13"
                },
                {
                  "assignments": [
                    2381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2381,
                      "mutability": "mutable",
                      "name": "_rewards",
                      "nameLocation": "4859:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2437,
                      "src": "4851:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2380,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4851:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2389,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2382,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2039,
                          "src": "4870:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                          }
                        },
                        "id": 2384,
                        "indexExpression": {
                          "id": 2383,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2356,
                          "src": "4877:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4870:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                          "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                        }
                      },
                      "id": 2387,
                      "indexExpression": {
                        "expression": {
                          "id": 2385,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4892:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4892:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4870:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$2023_storage",
                        "typeString": "struct myStackingDappOld.Stake storage ref"
                      }
                    },
                    "id": 2388,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rewards",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2020,
                    "src": "4870:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4851:60:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2390,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "4919:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2392,
                          "indexExpression": {
                            "id": 2391,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2356,
                            "src": "4926:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4919:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2395,
                        "indexExpression": {
                          "expression": {
                            "id": 2393,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4941:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4941:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4919:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2396,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakingAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2014,
                      "src": "4919:47:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4969:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4919:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2408,
                  "nodeType": "IfStatement",
                  "src": "4916:125:13",
                  "trueBody": {
                    "id": 2407,
                    "nodeType": "Block",
                    "src": "4972:69:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2399,
                            "name": "_rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2381,
                            "src": "4978:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2401,
                                "name": "_stakingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2356,
                                "src": "5009:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2402,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5024:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5024:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2400,
                              "name": "calcRewardPerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2492,
                              "src": "4990:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) returns (uint256)"
                              }
                            },
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4990:45:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4978:57:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2406,
                        "nodeType": "ExpressionStatement",
                        "src": "4978:57:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2409,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "5079:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2413,
                          "indexExpression": {
                            "id": 2410,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2356,
                            "src": "5086:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5079:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2414,
                        "indexExpression": {
                          "expression": {
                            "id": 2411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5101:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5101:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5079:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2415,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "5079:41:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5123:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5079:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2418,
                  "nodeType": "ExpressionStatement",
                  "src": "5079:45:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2422,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5167:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5167:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2424,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "5178:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2419,
                        "name": "rewardsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2026,
                        "src": "5149:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AALToken_$1385",
                          "typeString": "contract AALToken"
                        }
                      },
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1384,
                      "src": "5149:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5149:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2426,
                  "nodeType": "ExpressionStatement",
                  "src": "5149:38:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2428,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5387:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5387:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2430,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "5399:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2433,
                            "name": "rewardsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2026,
                            "src": "5416:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AALToken_$1385",
                              "typeString": "contract AALToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AALToken_$1385",
                              "typeString": "contract AALToken"
                            }
                          ],
                          "id": 2432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5408:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2431,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5408:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5408:21:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2427,
                      "name": "Rewarding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2073,
                      "src": "5377:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 2435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5377:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2436,
                  "nodeType": "EmitStatement",
                  "src": "5372:58:13"
                }
              ]
            },
            "documentation": {
              "id": 2354,
              "nodeType": "StructuredDocumentation",
              "src": "4455:131:13",
              "text": " Computes rewards and transfers them msg.sender\n _token : staked token\n require max every 30 sec can be called"
            },
            "functionSelector": "c00007b0",
            "id": 2438,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2359,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2356,
                    "src": "4656:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "expression": {
                      "id": 2360,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "4670:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4670:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2362,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2358,
                  "name": "stakerExist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2113,
                  "src": "4644:11:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "4644:37:13"
              }
            ],
            "name": "getReward",
            "nameLocation": "4604:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2356,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "4622:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2438,
                  "src": "4614:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4614:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4613:23:13"
            },
            "returnParameters": {
              "id": 2363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4681:0:13"
            },
            "scope": 2574,
            "src": "4595:843:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2491,
              "nodeType": "Block",
              "src": "5530:622:13",
              "statements": [
                {
                  "assignments": [
                    2448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2448,
                      "mutability": "mutable",
                      "name": "_rewards",
                      "nameLocation": "5841:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2491,
                      "src": "5833:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2447,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5833:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2478,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2449,
                            "name": "DAILY_REWARD_RATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2032,
                            "src": "5852:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2450,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "5873:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5873:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2452,
                                        "name": "stakes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2039,
                                        "src": "5891:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                          "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                                        }
                                      },
                                      "id": 2454,
                                      "indexExpression": {
                                        "id": 2453,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2440,
                                        "src": "5898:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5891:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                                        "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                                      }
                                    },
                                    "id": 2456,
                                    "indexExpression": {
                                      "id": 2455,
                                      "name": "_sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2442,
                                      "src": "5906:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5891:23:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$2023_storage",
                                      "typeString": "struct myStackingDappOld.Stake storage ref"
                                    }
                                  },
                                  "id": 2457,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "updateTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2018,
                                  "src": "5891:39:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5873:57:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2459,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5872:59:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5852:79:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2462,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2440,
                              "src": "5950:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2461,
                            "name": "getPriceOfToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "5934:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5934:23:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5852:105:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2465,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2039,
                              "src": "5960:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                                "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                              }
                            },
                            "id": 2467,
                            "indexExpression": {
                              "id": 2466,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2440,
                              "src": "5967:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5960:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                              "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                            }
                          },
                          "id": 2469,
                          "indexExpression": {
                            "id": 2468,
                            "name": "_sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2442,
                            "src": "5975:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5960:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$2023_storage",
                            "typeString": "struct myStackingDappOld.Stake storage ref"
                          }
                        },
                        "id": 2470,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakingAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2014,
                        "src": "5960:37:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5852:145:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2472,
                              "name": "getPriceOfAllSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2530,
                              "src": "6001:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 2473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6001:21:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 2474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6025:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "6001:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2476,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6000:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5852:178:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5833:197:13"
                },
                {
                  "expression": {
                    "id": 2487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2479,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "6061:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct myStackingDappOld.Stake storage ref))"
                            }
                          },
                          "id": 2482,
                          "indexExpression": {
                            "id": 2480,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2440,
                            "src": "6068:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6061:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2023_storage_$",
                            "typeString": "mapping(address => struct myStackingDappOld.Stake storage ref)"
                          }
                        },
                        "id": 2483,
                        "indexExpression": {
                          "id": 2481,
                          "name": "_sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2442,
                          "src": "6076:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6061:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2023_storage",
                          "typeString": "struct myStackingDappOld.Stake storage ref"
                        }
                      },
                      "id": 2484,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2018,
                      "src": "6061:39:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2485,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "6103:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6103:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6061:57:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2488,
                  "nodeType": "ExpressionStatement",
                  "src": "6061:57:13"
                },
                {
                  "expression": {
                    "id": 2489,
                    "name": "_rewards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2448,
                    "src": "6136:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2446,
                  "id": 2490,
                  "nodeType": "Return",
                  "src": "6129:15:13"
                }
              ]
            },
            "id": 2492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcRewardPerStake",
            "nameLocation": "5455:18:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2440,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5482:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "5474:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5474:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2442,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "5498:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "5490:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5490:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5473:33:13"
            },
            "returnParameters": {
              "id": 2446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "5524:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5523:6:13"
            },
            "scope": 2574,
            "src": "5446:706:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2529,
              "nodeType": "Block",
              "src": "6250:175:13",
              "statements": [
                {
                  "assignments": [
                    2498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2498,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6263:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2529,
                      "src": "6255:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2497,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6255:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2499,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6255:14:13"
                },
                {
                  "body": {
                    "id": 2525,
                    "nodeType": "Block",
                    "src": "6317:86:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2511,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2498,
                            "src": "6323:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 2513,
                                    "name": "listOfToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2049,
                                    "src": "6349:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 2515,
                                  "indexExpression": {
                                    "id": 2514,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2501,
                                    "src": "6361:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6349:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2512,
                                "name": "getPriceOfToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2558,
                                "src": "6333:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 2516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6333:31:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 2517,
                                "name": "totalTokenSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2043,
                                "src": "6365:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2521,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2518,
                                  "name": "listOfToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2049,
                                  "src": "6382:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2520,
                                "indexExpression": {
                                  "id": 2519,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2501,
                                  "src": "6394:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6382:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6365:32:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6333:64:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6323:74:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2524,
                        "nodeType": "ExpressionStatement",
                        "src": "6323:74:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2504,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2501,
                      "src": "6290:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2505,
                        "name": "listOfToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2049,
                        "src": "6292:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6292:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6290:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2526,
                  "initializationExpression": {
                    "assignments": [
                      2501
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2501,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6283:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2526,
                        "src": "6278:6:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2500,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6278:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2503,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6287:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6278:10:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6313:3:13",
                      "subExpression": {
                        "id": 2508,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "6313:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2510,
                    "nodeType": "ExpressionStatement",
                    "src": "6313:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "6274:129:13"
                },
                {
                  "expression": {
                    "id": 2527,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2498,
                    "src": "6414:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2496,
                  "id": 2528,
                  "nodeType": "Return",
                  "src": "6407:13:13"
                }
              ]
            },
            "functionSelector": "d1f86806",
            "id": 2530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceOfAllSupply",
            "nameLocation": "6203:19:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6222:2:13"
            },
            "returnParameters": {
              "id": 2496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2530,
                  "src": "6245:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6245:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6244:6:13"
            },
            "scope": 2574,
            "src": "6194:231:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2557,
              "nodeType": "Block",
              "src": "6499:123:13",
              "statements": [
                {
                  "assignments": [
                    2538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2538,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "6536:1:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2557,
                      "src": "6532:5:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 2537,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "6532:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2545,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2541,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "6563:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2542,
                          "name": "Denominations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "6570:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Denominations_$116_$",
                            "typeString": "type(library Denominations)"
                          }
                        },
                        "id": 2543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "6570:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2539,
                        "name": "priceConsumer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2029,
                        "src": "6540:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceConsumer_$2635",
                          "typeString": "contract PriceConsumer"
                        }
                      },
                      "id": 2540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2634,
                      "src": "6540:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_int256_$",
                        "typeString": "function (address,address) view external returns (int256)"
                      }
                    },
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6540:48:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6532:56:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2548,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2538,
                            "src": "6605:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6607:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6605:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 2553,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "6612:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "6605:8:13",
                        "trueExpression": {
                          "id": 2552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "6609:2:13",
                          "subExpression": {
                            "id": 2551,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2538,
                            "src": "6610:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 2547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6600:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 2546,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6600:4:13",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6600:14:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2536,
                  "id": 2556,
                  "nodeType": "Return",
                  "src": "6593:21:13"
                }
              ]
            },
            "functionSelector": "8da84478",
            "id": 2558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceOfToken",
            "nameLocation": "6442:15:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2532,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6466:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2558,
                  "src": "6458:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6457:16:13"
            },
            "returnParameters": {
              "id": 2536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2535,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2558,
                  "src": "6494:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2534,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6494:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6493:6:13"
            },
            "scope": 2574,
            "src": "6433:189:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eaaa65ed",
            "id": 2561,
            "mutability": "mutable",
            "name": "wf",
            "nameLocation": "7192:2:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "7179:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2559,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "7179:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 2560,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7197:2:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a98e629",
            "id": 2564,
            "mutability": "mutable",
            "name": "stackingToken",
            "nameLocation": "7221:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 2574,
            "src": "7203:31:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenBidon_$2679",
              "typeString": "contract TokenBidon"
            },
            "typeName": {
              "id": 2563,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2562,
                "name": "TokenBidon",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2679,
                "src": "7203:10:13"
              },
              "referencedDeclaration": 2679,
              "src": "7203:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenBidon_$2679",
                "typeString": "contract TokenBidon"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2572,
              "nodeType": "Block",
              "src": "7302:28:13",
              "statements": [
                {
                  "expression": {
                    "id": 2570,
                    "name": "listOfToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2049,
                    "src": "7314:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2569,
                  "id": 2571,
                  "nodeType": "Return",
                  "src": "7307:18:13"
                }
              ]
            },
            "functionSelector": "273cbaa0",
            "id": 2573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenList",
            "nameLocation": "7250:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7262:2:13"
            },
            "returnParameters": {
              "id": 2569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2573,
                  "src": "7285:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2566,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7285:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2567,
                    "nodeType": "ArrayTypeName",
                    "src": "7285:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7284:18:13"
            },
            "scope": 2574,
            "src": "7241:89:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2575,
        "src": "273:7096:13",
        "usedErrors": []
      }
    ],
    "src": "33:7336:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-03-27T12:57:28.197Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getReward(address)": {
        "notice": "Computes rewards and transfers them msg.sender _token : staked token require max every 30 sec can be called"
      }
    },
    "version": 1
  }
}